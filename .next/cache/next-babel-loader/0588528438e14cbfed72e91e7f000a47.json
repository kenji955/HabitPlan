{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { taskRemovePattern } from \"../../modules/tasksModule\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    roots: {\n      width: \"100%\",\n      maxWidth: 720,\n      margin: \"auto\",\n      backgroundColor: theme.palette.background.paper\n    }\n  });\n});\nexport default function PatternList(props) {\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.tasks;\n  }),\n      userTaskInfo = _useSelector.userTaskInfo; // マイナスボタンがクリックされたらパターンから対象のタスクを除外する。\n\n\n  var patternRemoveHandler = function patternRemoveHandler(detailTitle) {\n    return function () {\n      var patternId = props.choice;\n      dispatch(taskRemovePattern({\n        patternId: patternId,\n        detailTitle: detailTitle\n      }));\n    };\n  }; // 選択したパターンIDが設定されているタスクを抽出する。\n\n\n  var choicePatternTasks = userTaskInfo.tasks.filter(function (task) {\n    return task.patternInfo.some(function (task) {\n      return task.patternID == props.choice;\n    });\n  });\n  return __jsx(List, {\n    className: classes.roots\n  }, choicePatternTasks.map(function (task, index) {\n    var taskPattern = task.patternInfo.filter(function (patternInfo) {\n      return patternInfo.patternID == props.choice;\n    });\n    var labelId = \"checkbox-list-label-\".concat(taskPattern[0].patternID + taskPattern[0].order);\n    return __jsx(\"div\", {\n      key: taskPattern[0].patternID + '_' + index\n    }, __jsx(ListItem, {\n      key: taskPattern[0].patternID + taskPattern[0].order,\n      role: undefined,\n      dense: true,\n      button: true\n    }, __jsx(ListItemIcon, null, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      onClick: patternRemoveHandler(task.detail['title'])\n    }, __jsx(RemoveCircleIcon, {\n      color: \"secondary\"\n    }))), __jsx(ListItemText, {\n      id: labelId,\n      primary: \"Line item \".concat(taskPattern[0].patternID + \"_\" + taskPattern[0].order, \" \").concat(task.detail[\"testDetail1\"], \" \").concat(task.detail[\"testDetail2\"])\n    }), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\"\n    }, __jsx(CommentIcon, null)))), __jsx(Divider, null));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}