{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\PatternList.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport { useSelector } from \"react-redux\";\nconst useStyles = makeStyles(theme => createStyles({\n  roots: {\n    width: \"100%\",\n    maxWidth: 720,\n    margin: \"auto\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function PatternList(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n  const {\n    userTaskInfo\n  } = useSelector(state => state.tasks);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return __jsx(List, {\n    className: classes.roots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, [0, 1, 2, 3].map(value => {\n    const labelId = `checkbox-list-label-${value}`;\n    return __jsx(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, __jsx(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, __jsx(RemoveCircleIcon, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }))), __jsx(ListItemText, {\n      id: labelId,\n      primary: `Line item ${value + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }), __jsx(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, __jsx(CommentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }))));\n  }));\n}","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/PatternList.tsx"],"names":["React","createStyles","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","IconButton","CommentIcon","RemoveCircleIcon","useSelector","useStyles","theme","roots","width","maxWidth","margin","backgroundColor","palette","background","paper","PatternList","props","classes","checked","setChecked","useState","userTaskInfo","state","tasks","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","labelId","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../modules/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        roots: {\r\n            width: \"100%\",\r\n            maxWidth: 720,\r\n\r\n            margin: \"auto\",\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n    })\r\n);\r\n\r\nexport default function PatternList(props: { choice: number }) {\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = React.useState([0]);\r\n    const { userTaskInfo } = useSelector((state: RootState) => state.tasks);\r\n\r\n    const handleToggle = (value: number) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <List className={classes.roots}>\r\n            {[0, 1, 2, 3].map((value) => {\r\n                const labelId = `checkbox-list-label-${value}`;\r\n\r\n                return (\r\n                    <ListItem\r\n                        key={value}\r\n                        role={undefined}\r\n                        dense\r\n                        button\r\n                        onClick={handleToggle(value)}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                <RemoveCircleIcon color=\"secondary\" />\r\n                            </IconButton>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            id={labelId}\r\n                            primary={`Line item ${value + 1}`}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                {/* <IconButton aria-label=\"comments\"> */}\r\n                                <CommentIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}