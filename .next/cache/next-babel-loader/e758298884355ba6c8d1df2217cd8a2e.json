{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\DateList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { green } from \"@material-ui/core/colors\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: \"flex\",\n      \"& > *\": {\n        margin: theme.spacing(1)\n      }\n    },\n    square: {\n      // color: theme.palette.getContrastText(deepOrange[500]),\n      // backgroundColor: deepOrange[500],\n      display: \"inline-flex\",\n      margin: \"0 3px\",\n      textAlign: \"center\" // width:'100px',\n\n    },\n    rounded: {\n      color: \"#fff\",\n      backgroundColor: green[500]\n    }\n  });\n}); // export default function DateList(props: { choice: number, setChoice: React.Dispatch<React.SetStateAction<number>> }) {\n\nexport default function DateList(props) {\n  _s();\n\n  var classes = useStyles();\n  var displayRange = 14;\n  var dataList = [];\n  var dateT = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\n  var date = props.today;\n  date.setDate(props.today.getDate() - displayRange + 1);\n\n  var handleClick = function handleClick(year, month, date) {\n    return function () {\n      props.setChoiceDate([year, month, date]);\n    };\n  };\n\n  for (var index = displayRange - 1; index >= 0; index--) {\n    console.log(index + 1);\n    console.log(date);\n    dataList.push(__jsx(Avatar, {\n      key: date.getFullYear() + \"_\" + date.getMonth() + 1 + \"_\" + date.getDate(),\n      variant: \"square\",\n      className: classes.square,\n      onClick: handleClick(date.getFullYear(), date.getMonth() + 1, date.getDate()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, dateT[date.getDay()], __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), date.getDate()));\n    date.setDate(props.today.getDate() + 1);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, dataList.map(function (data, index) {\n    return data;\n  })) // <div className={classes.home}>\n  //     <FormControl className={classes.formControl}>\n  //         <InputLabel id=\"demo-simple-select-label\">Pattern</InputLabel>\n  //         {/* valueには選択している項目のvalueが設定される */}\n  //         <Select\n  //             labelId=\"demo-simple-select-label\"\n  //             id=\"demo-simple-select\"\n  //             value={props.choice}\n  //             onChange={handleChange}\n  //         >\n  //             {userTaskInfo.pattern.map((pattern)=>{\n  //                 return <MenuItem value={pattern.patternId}>{pattern.patternName}</MenuItem>\n  //             })}\n  //         </Select>\n  //     </FormControl>\n  // </div>\n  // {dataList}\n  // <Avatar variant=\"square\" className={classes.square}>\n  //     N\n  // </Avatar>\n  ;\n}\n\n_s(DateList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DateList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateList\");","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/DateList.tsx"],"names":["React","createStyles","makeStyles","Avatar","green","useStyles","theme","root","display","margin","spacing","square","textAlign","rounded","color","backgroundColor","DateList","props","classes","displayRange","dataList","dateT","date","today","setDate","getDate","handleClick","year","month","setChoiceDate","index","console","log","push","getFullYear","getMonth","getDay","map","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange, green } from \"@material-ui/core/colors\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../modules/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: \"flex\",\r\n            \"& > *\": {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        square: {\r\n            // color: theme.palette.getContrastText(deepOrange[500]),\r\n            // backgroundColor: deepOrange[500],\r\n            display: \"inline-flex\",\r\n            margin: \"0 3px\",\r\n            textAlign: \"center\",\r\n            // width:'100px',\r\n        },\r\n        rounded: {\r\n            color: \"#fff\",\r\n            backgroundColor: green[500],\r\n        },\r\n    })\r\n);\r\n\r\n// export default function DateList(props: { choice: number, setChoice: React.Dispatch<React.SetStateAction<number>> }) {\r\nexport default function DateList(props: {\r\n    today: Date;\r\n    setChoiceDate: React.Dispatch<React.SetStateAction<number[]>>;\r\n}) {\r\n    const classes = useStyles();\r\n    const displayRange: number = 14;\r\n    const dataList = [];\r\n    const dateT = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\r\n    const date = props.today;\r\n    date.setDate(props.today.getDate() - displayRange + 1);\r\n\r\n    const handleClick = (year: number, month: number, date: number) => () => {\r\n        props.setChoiceDate([year, month, date]);\r\n    };\r\n\r\n    for (let index: number = displayRange - 1; index >= 0; index--) {\r\n        console.log(index + 1);\r\n        console.log(date);\r\n\r\n        dataList.push(\r\n            <Avatar\r\n                key={date.getFullYear()+\"_\"+date.getMonth()+1+\"_\"+date.getDate()}\r\n                variant=\"square\"\r\n                className={classes.square}\r\n                onClick={handleClick(\r\n                    date.getFullYear(),\r\n                    date.getMonth() + 1,\r\n                    date.getDate()\r\n                )}\r\n            >\r\n                {dateT[date.getDay()]}\r\n                <br></br>\r\n                {date.getDate()}\r\n            </Avatar>\r\n        );\r\n        date.setDate(props.today.getDate() + 1);\r\n    }\r\n    return (\r\n        <div>\r\n            {dataList.map((data, index) => {\r\n                return data;\r\n            })}\r\n        </div>\r\n        // <div className={classes.home}>\r\n        //     <FormControl className={classes.formControl}>\r\n        //         <InputLabel id=\"demo-simple-select-label\">Pattern</InputLabel>\r\n        //         {/* valueには選択している項目のvalueが設定される */}\r\n        //         <Select\r\n        //             labelId=\"demo-simple-select-label\"\r\n        //             id=\"demo-simple-select\"\r\n        //             value={props.choice}\r\n        //             onChange={handleChange}\r\n        //         >\r\n        //             {userTaskInfo.pattern.map((pattern)=>{\r\n        //                 return <MenuItem value={pattern.patternId}>{pattern.patternName}</MenuItem>\r\n        //             })}\r\n        //         </Select>\r\n        //     </FormControl>\r\n        // </div>\r\n        // {dataList}\r\n        // <Avatar variant=\"square\" className={classes.square}>\r\n        //     N\r\n        // </Avatar>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}