{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\TaskList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TaskModal from \"./TaskModal\";\nimport TaskPlus from \"./taskPlus\";\nimport Popper from \"./Popper\";\nimport { useSelector } from \"react-redux\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    roots: {\n      width: \"100%\",\n      maxWidth: 720,\n      margin: \"auto\",\n      backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n      display: \"flex\",\n      margin: \"10px auto 5px auto\"\n    }\n  });\n});\nexport default function CheckboxList() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(9999),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.tasks;\n  }),\n      userTaskInfo = _useSelector.userTaskInfo;\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      setOpen(value);\n      console.log(\"open:\" + open);\n    };\n  };\n\n  var deleteTaskHandler = function deleteTaskHandler(index) {\n    return function () {};\n  };\n\n  return __jsx(List, {\n    className: classes.roots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, userTaskInfo.tasks.map(function (task, index) {\n    var labelId = \"checkbox-list-label-\".concat(task.detail[\"testDetail1\"]);\n    return __jsx(\"div\", {\n      key: labelId + \"_\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, __jsx(ListItem, {\n      key: task.detail[\"title\"] + \":\" + index,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, __jsx(ListItemText, {\n      id: labelId,\n      primary: \"Line item \".concat(index + 1, \" \").concat(task.detail[\"testDetail1\"], \" \").concat(task.detail[\"testDetail2\"]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }), __jsx(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, __jsx(TaskModal, {\n      open: open,\n      setOpen: setOpen,\n      task: task,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, __jsx(CommentIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    })), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      onClick: deleteTaskHandler(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, __jsx(Popper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }\n    })))), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }));\n  }), __jsx(TaskPlus, {\n    num: userTaskInfo.tasks.length + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(CheckboxList, \"E/eJ56t/AylQRe7m3WKF5G5o1jg=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = CheckboxList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxList\");","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/TaskList.tsx"],"names":["React","createStyles","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","CommentIcon","Divider","TaskModal","TaskPlus","Popper","useSelector","useStyles","theme","roots","width","maxWidth","margin","backgroundColor","palette","background","paper","icon","display","CheckboxList","classes","useState","open","setOpen","state","tasks","userTaskInfo","handleToggle","value","console","log","deleteTaskHandler","index","map","task","labelId","detail","undefined","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,IAAMC,SAAS,GAAGZ,UAAU,CAAC,UAACa,KAAD;AAAA,SACzBd,YAAY,CAAC;AACTe,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,MADJ;AAEHC,MAAAA,QAAQ,EAAE,GAFP;AAGHC,MAAAA,MAAM,EAAE,MAHL;AAIHC,MAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcC,UAAd,CAAyBC;AAJvC,KADE;AAOTC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAE,MADP;AAEFN,MAAAA,MAAM,EAAE;AAFN;AAPG,GAAD,CADa;AAAA,CAAD,CAA5B;AAeA,eAAe,SAASO,YAAT,GAAwB;AAAA;;AAAA;;AACnC,MAAMC,OAAO,GAAGb,SAAS,EAAzB;;AADmC,wBAEXd,KAAK,CAAC4B,QAAN,CAAe,IAAf,CAFW;AAAA;AAAA,MAE5BC,IAF4B;AAAA,MAEtBC,OAFsB;;AAAA,qBAGVjB,WAAW,CAAC,UAACkB,KAAD;AAAA,WAAsBA,KAAK,CAACC,KAA5B;AAAA,GAAD,CAHD;AAAA,MAG3BC,YAH2B,gBAG3BA,YAH2B;;AAKnC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,WAAmB,YAAM;AAC1CL,MAAAA,OAAO,CAACK,KAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUR,IAAtB;AACH,KAHoB;AAAA,GAArB;;AAKA,MAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,WAAiB,YAAI,CAE9C,CAFyB;AAAA,GAA1B;;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEZ,OAAO,CAACX,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKiB,YAAY,CAACD,KAAb,CAAmBQ,GAAnB,CAAuB,UAACC,IAAD,EAAOF,KAAP,EAAiB;AACrC,QAAMG,OAAO,iCAA0BD,IAAI,CAACE,MAAL,CAAY,aAAZ,CAA1B,CAAb;AAEA,WACI;AAAK,MAAA,GAAG,EAAED,OAAO,GAAG,GAAV,GAAgBH,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AACI,MAAA,GAAG,EAAEE,IAAI,CAACE,MAAL,CAAY,OAAZ,IAAuB,GAAvB,GAA6BJ,KADtC;AAEI,MAAA,IAAI,EAAEK,SAFV;AAGI,MAAA,KAAK,MAHT;AAII,MAAA,MAAM,MAJV;AAKI,MAAA,OAAO,EAAEV,YAAY,CAACK,KAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,MAAC,YAAD;AACI,MAAA,EAAE,EAAEG,OADR;AAEI,MAAA,OAAO,sBAAeH,KAAK,GAAG,CAAvB,cACHE,IAAI,CAACE,MAAL,CAAY,aAAZ,CADG,cAEHF,IAAI,CAACE,MAAL,CAAY,aAAZ,CAFG,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAaI,MAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAEd,IADV;AAEI,MAAA,OAAO,EAAEC,OAFb;AAGI,MAAA,IAAI,EAAEW,IAHV;AAII,MAAA,KAAK,EAAEF,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAC,KAAjB;AAAuB,oBAAW,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,EAUI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAC,KAAjB;AAAuB,oBAAW,UAAlC;AAA6C,MAAA,OAAO,EAAED,iBAAiB,CAACC,KAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,CAbJ,CADJ,EA8BI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,CADJ;AAkCH,GArCA,CADL,EAuCI,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEN,YAAY,CAACD,KAAb,CAAmBa,MAAnB,GAA4B,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,CADJ;AA2CH;;GAzDuBnB,Y;UACJZ,S,EAESD,W;;;KAHLa,Y","sourcesContent":["import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\n\r\nimport TaskModal from \"./TaskModal\";\r\nimport TaskPlus from \"./taskPlus\";\r\nimport Popper from \"./Popper\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../modules/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        roots: {\r\n            width: \"100%\",\r\n            maxWidth: 720,\r\n            margin: \"auto\",\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        icon: {\r\n            display: \"flex\",\r\n            margin: \"10px auto 5px auto\",\r\n        },\r\n    })\r\n);\r\n\r\nexport default function CheckboxList() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(9999);\r\n    const { userTaskInfo } = useSelector((state: RootState) => state.tasks);\r\n\r\n    const handleToggle = (value: number) => () => {\r\n        setOpen(value);\r\n        console.log(\"open:\" + open);\r\n    };\r\n\r\n    const deleteTaskHandler = (index:number) =>()=>{\r\n\r\n    }\r\n    \r\n    return (\r\n        <List className={classes.roots}>\r\n            {userTaskInfo.tasks.map((task, index) => {\r\n                const labelId = `checkbox-list-label-${task.detail[\"testDetail1\"]}`;\r\n\r\n                return (\r\n                    <div key={labelId + \"_\" + index}>\r\n                        <ListItem\r\n                            key={task.detail[\"title\"] + \":\" + index}\r\n                            role={undefined}\r\n                            dense\r\n                            button\r\n                            onClick={handleToggle(index)}\r\n                        >\r\n                            <ListItemText\r\n                                id={labelId}\r\n                                primary={`Line item ${index + 1} ${\r\n                                    task.detail[\"testDetail1\"]\r\n                                } ${task.detail[\"testDetail2\"]}`}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <TaskModal\r\n                                    open={open}\r\n                                    setOpen={setOpen}\r\n                                    task={task}\r\n                                    index={index}\r\n                                />\r\n                                <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                    <CommentIcon />\r\n                                </IconButton>\r\n                                <IconButton edge=\"end\" aria-label=\"comments\" onClick={deleteTaskHandler(index)}>\r\n                                    {/* <RemoveCircleIcon color=\"secondary\"/> */}\r\n                                    <Popper />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </div>\r\n                );\r\n            })}\r\n            <TaskPlus num={userTaskInfo.tasks.length + 1} />\r\n        </List>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}