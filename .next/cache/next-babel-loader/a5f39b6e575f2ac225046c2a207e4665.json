{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\"; // import Link from '@material-ui/core/Link';\n\nimport Link from \"next/link\";\nimport SettingMenu from './settingMenu';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\nvar drawerWidth = 240;\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    rootd: {\n      display: \"inline-block\"\n    },\n    drawer: _defineProperty({}, theme.breakpoints.up(\"sm\"), {\n      width: drawerWidth,\n      flexShrink: 0\n    }),\n    appBar: _defineProperty({}, theme.breakpoints.up(\"sm\"), {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n      marginLeft: drawerWidth\n    }),\n    menuButton: _defineProperty({\n      marginRight: theme.spacing(2)\n    }, theme.breakpoints.up(\"sm\"), {\n      display: \"none\"\n    }),\n    settingButton: {\n      margin: ' 0 0 0 auto'\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  });\n});\nexport default function ResponsiveDrawer(props) {\n  var window = props.window;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mobileOpen = _React$useState2[0],\n      setMobileOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      anchorEl = _React$useState4[0],\n      setAnchorEl = _React$useState4[1];\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var drawer = __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.toolbar\n  }), __jsx(Divider, null), __jsx(List, null, __jsx(Link, {\n    href: \"/DayPlan\"\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"Day Plan\"\n  }, __jsx(ListItemIcon, null, __jsx(DirectionsRunIcon, null)), __jsx(ListItemText, {\n    primary: \"Day Plan\"\n  }))), __jsx(Link, {\n    href: \"/tasks\"\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"Tasks\"\n  }, __jsx(ListItemIcon, null, __jsx(ListIcon, null)), __jsx(ListItemText, {\n    primary: \"Tasks\"\n  }))), __jsx(Link, {\n    href: \"/calendar\"\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"Calendar\"\n  }, __jsx(ListItemIcon, null, __jsx(DateRangeIcon, null)), __jsx(ListItemText, {\n    primary: \"Calendar\"\n  })))), __jsx(Divider, null));\n\n  var container = window !== undefined ? function () {\n    return window().document.body;\n  } : undefined;\n  return __jsx(\"div\", {\n    className: classes.rootd\n  }, __jsx(CssBaseline, null), __jsx(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    edge: \"start\",\n    onClick: handleDrawerToggle,\n    className: classes.menuButton\n  }, __jsx(MenuIcon, null)), __jsx(Typography, {\n    variant: \"h6\",\n    noWrap: true\n  }, \"Habit Plan\"), __jsx(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    edge: \"end\",\n    onClick: handleClick,\n    className: classes.settingButton\n  }, __jsx(SettingsIcon, null)), __jsx(SettingMenu, {\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl\n  }))), __jsx(\"nav\", {\n    className: classes.drawer,\n    \"aria-label\": \"mailbox folders\"\n  }, __jsx(Hidden, {\n    smUp: true,\n    implementation: \"css\"\n  }, __jsx(Drawer, {\n    container: container,\n    variant: \"temporary\",\n    anchor: theme.direction === \"rtl\" ? \"right\" : \"left\",\n    open: mobileOpen,\n    onClose: handleDrawerToggle,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    }\n  }, drawer)), __jsx(Hidden, {\n    xsDown: true,\n    implementation: \"css\"\n  }, __jsx(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true\n  }, drawer))));\n}","map":null,"metadata":{},"sourceType":"module"}