{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport TaskModal from \"./TaskModal\";\nimport TaskPlus from \"./taskPlus\";\nimport Menu from \"./Menu\";\nimport { useSelector } from \"react-redux\";\nconst useStyles = makeStyles(theme => createStyles({\n  roots: {\n    width: \"100%\",\n    maxWidth: 720,\n    margin: \"auto\",\n    backgroundColor: theme.palette.background.paper\n  },\n  icon: {\n    display: \"flex\",\n    margin: \"10px auto 5px auto\"\n  },\n  paper: {\n    border: \"1px solid\",\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function CheckboxList() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(9999);\n  const [openMenu, setOpenMune] = React.useState(9999);\n  const {\n    userTaskInfo\n  } = useSelector(state => state.tasks);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = value => event => {\n    setAnchorEl(event.currentTarget);\n    setOpenMune(value);\n    console.log(\"openMenu:\" + openMenu);\n  };\n\n  const handleToggle = value => () => {\n    setOpen(value);\n    console.log(\"open:\" + open);\n  };\n\n  const deleteTaskHandler = () => () => {\n    console.log(\"check deleteTaskHandler\"); // dispatch(taskDelete(index));\n  };\n\n  return __jsx(List, {\n    className: classes.roots\n  }, userTaskInfo.tasks.map((task, index) => {\n    const labelId = `checkbox-list-label-${task.detail[\"testDetail1\"]}`;\n    return __jsx(ListItem, {\n      key: task.detail[\"title\"] + \":\" + index,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(index),\n      divider: true\n    }, __jsx(ListItemText, {\n      id: labelId,\n      primary: __jsx(\"span\", null, task.detail[\"タスク名\"]) // disableTypography={false}\n      ,\n      primaryTypographyProps: {\n        component: 'span'\n      }\n    }), __jsx(ListItemSecondaryAction, null, __jsx(TaskModal, {\n      open: open,\n      setOpen: setOpen,\n      task: task,\n      index: index\n    }), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\"\n    }, __jsx(CommentIcon, null)), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"RemoveCircle\",\n      onClick: handleClick(index)\n    }, __jsx(RemoveCircleIcon, {\n      color: \"secondary\"\n    })), __jsx(Menu, {\n      openMenu: openMenu,\n      setOpenMune: setOpenMune,\n      anchorEl: anchorEl,\n      deleteTaskHandler: deleteTaskHandler,\n      index: index\n    })));\n  }), __jsx(TaskPlus, {\n    num: userTaskInfo.tasks.length + 1\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}