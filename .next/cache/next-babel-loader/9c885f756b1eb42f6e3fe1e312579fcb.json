{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport TaskModal from \"./TaskModal\";\nimport TaskPlus from \"./taskPlus\";\nimport Menu from \"./Menu\";\nimport { useSelector } from \"react-redux\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    roots: {\n      width: \"100%\",\n      maxWidth: 720,\n      margin: \"auto\",\n      backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n      display: \"flex\",\n      margin: \"10px auto 5px auto\"\n    },\n    paper: {\n      border: \"1px solid\",\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.paper\n    }\n  });\n});\nexport default function CheckboxList() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(9999),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(9999),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openMenu = _React$useState4[0],\n      setOpenMune = _React$useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.tasks;\n  }),\n      userTaskInfo = _useSelector.userTaskInfo;\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      anchorEl = _React$useState6[0],\n      setAnchorEl = _React$useState6[1];\n\n  var handleClick = function handleClick(value) {\n    return function (event) {\n      setAnchorEl(event.currentTarget);\n      setOpenMune(value);\n      console.log(\"openMenu:\" + openMenu);\n    };\n  };\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      setOpen(value);\n      console.log(\"open:\" + open);\n    };\n  };\n\n  var deleteTaskHandler = function deleteTaskHandler() {\n    return function () {\n      console.log(\"check deleteTaskHandler\"); // dispatch(taskDelete(index));\n    };\n  };\n\n  return __jsx(List, {\n    className: classes.roots\n  }, userTaskInfo.tasks.map(function (task, index) {\n    var labelId = \"checkbox-list-label-\".concat(task.detail[\"testDetail1\"]);\n    return __jsx(ListItem, {\n      key: task.detail[\"title\"] + \":\" + index,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(index),\n      divider: true\n    }, __jsx(ListItemText, {\n      id: labelId,\n      primary: __jsx(\"span\", null, task.detail[\"タスク名\"]) // disableTypography={false}\n      ,\n      primaryTypographyProps: {\n        component: 'span'\n      }\n    }), __jsx(ListItemSecondaryAction, null, __jsx(TaskModal, {\n      open: open,\n      setOpen: setOpen,\n      task: task,\n      index: index\n    }), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\"\n    }, __jsx(CommentIcon, null)), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"RemoveCircle\",\n      onClick: handleClick(index)\n    }, __jsx(RemoveCircleIcon, {\n      color: \"secondary\"\n    })), __jsx(Menu, {\n      openMenu: openMenu,\n      setOpenMune: setOpenMune,\n      anchorEl: anchorEl,\n      deleteTaskHandler: deleteTaskHandler,\n      index: index\n    })));\n  }), __jsx(TaskPlus, {\n    num: userTaskInfo.tasks.length + 1\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}