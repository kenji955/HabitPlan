{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\test\\\\Header.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\n\nvar CalendarHeader = /*#__PURE__*/function (_Component) {\n  _inherits(CalendarHeader, _Component);\n\n  var _super = _createSuper(CalendarHeader);\n\n  function CalendarHeader(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarHeader);\n\n    _this = _super.call(this, props);\n    _this.getNameOfMonth = _this.getNameOfMonth.bind(_assertThisInitialized(_this));\n    _this.handleClickMonths = _this.handleClickMonths.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CalendarHeader, [{\n    key: \"getNameOfMonth\",\n    value: function getNameOfMonth(month) {\n      var nameOfMonths = {\n        0: 'January',\n        1: 'February',\n        2: 'March',\n        3: 'April',\n        4: 'May',\n        5: 'June',\n        6: 'July',\n        7: 'August',\n        8: 'September',\n        9: 'October',\n        10: 'Novemver',\n        11: 'December'\n      };\n      return nameOfMonths[month];\n    }\n  }, {\n    key: \"handleClickMonths\",\n    value: function handleClickMonths(e) {\n      e.preventDefault();\n      this.props.onChangeCurrentView('months');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(TableCell, {\n        className: \"calendarHeader\",\n        onClick: this.handleClickMonths,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, this.currentHeader);\n    }\n  }, {\n    key: \"currentHeader\",\n    get: function get() {\n      if (this.props.currentView === 'months') {\n        return __jsx(\"div\", {\n          id: \"header-position\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }\n        }, __jsx(\"div\", {\n          className: \"header-only-year\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }, this.props.year));\n      } else {\n        return __jsx(\"div\", {\n          id: \"header-position\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }\n        }, __jsx(\"div\", {\n          className: \"header-month\",\n          numeric: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }, this.getNameOfMonth(this.props.month)), __jsx(\"div\", {\n          className: \"header-year\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }\n        }, this.props.year));\n      }\n    }\n  }]);\n\n  return CalendarHeader;\n}(Component);\n\nexport { CalendarHeader as default };","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/test/Header.jsx"],"names":["React","Component","TableCell","CalendarHeader","props","getNameOfMonth","bind","handleClickMonths","month","nameOfMonths","e","preventDefault","onChangeCurrentView","currentHeader","currentView","year"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;IAEqBC,c;;;;;AACnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB;AAHiB;AAIlB;;;;mCAEcE,K,EAAO;AACpB,UAAMC,YAAY,GAAG;AACnB,WAAG,SADgB;AAEnB,WAAG,UAFgB;AAGnB,WAAG,OAHgB;AAInB,WAAG,OAJgB;AAKnB,WAAG,KALgB;AAMnB,WAAG,MANgB;AAOnB,WAAG,MAPgB;AAQnB,WAAG,QARgB;AASnB,WAAG,WATgB;AAUnB,WAAG,SAVgB;AAWnB,YAAI,UAXe;AAYnB,YAAI;AAZe,OAArB;AAcA,aAAOA,YAAY,CAACD,KAAD,CAAnB;AACD;;;sCAEiBE,C,EAAG;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKP,KAAL,CAAWQ,mBAAX,CAA+B,QAA/B;AACD;;;6BAmBQ;AACP,aACE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC,gBAArB;AAAsC,QAAA,OAAO,EAAE,KAAKL,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKM,aADR,CADF;AAKD;;;wBAvBmB;AAClB,UAAI,KAAKT,KAAL,CAAWU,WAAX,KAA2B,QAA/B,EAAyC;AACvC,eACE;AAAK,UAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmC,KAAKV,KAAL,CAAWW,IAA9C,CADF,CADF;AAKD,OAND,MAMO;AACL,eACE;AAAK,UAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,OAAO,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKV,cAAL,CAAoB,KAAKD,KAAL,CAAWI,KAA/B,CAAvC,CADF,EAEE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8B,KAAKJ,KAAL,CAAWW,IAAzC,CAFF,CADF;AAMD;AACF;;;;EA7CyCd,S;;SAAvBE,c","sourcesContent":["import React, { Component } from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nexport default class CalendarHeader extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.getNameOfMonth = this.getNameOfMonth.bind(this);\r\n    this.handleClickMonths = this.handleClickMonths.bind(this);\r\n  }\r\n\r\n  getNameOfMonth(month) {\r\n    const nameOfMonths = {\r\n      0: 'January',\r\n      1: 'February',\r\n      2: 'March',\r\n      3: 'April',\r\n      4: 'May',\r\n      5: 'June',\r\n      6: 'July',\r\n      7: 'August',\r\n      8: 'September',\r\n      9: 'October',\r\n      10: 'Novemver',\r\n      11: 'December'\r\n    };\r\n    return nameOfMonths[month];\r\n  }\r\n\r\n  handleClickMonths(e) {\r\n    e.preventDefault();\r\n    this.props.onChangeCurrentView('months');\r\n  }\r\n\r\n  get currentHeader() {\r\n    if (this.props.currentView === 'months') {\r\n      return (\r\n        <div id='header-position'>\r\n          <div className='header-only-year'>{this.props.year}</div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div id='header-position'>\r\n          <div className='header-month' numeric>{this.getNameOfMonth(this.props.month)}</div>\r\n          <div className='header-year'>{this.props.year}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TableCell className='calendarHeader' onClick={this.handleClickMonths}>\r\n        {this.currentHeader}\r\n      </TableCell>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}