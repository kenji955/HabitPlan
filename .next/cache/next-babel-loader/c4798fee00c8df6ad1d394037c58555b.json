{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\Select.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { patternDelete, patternNameEdit, patternRegister } from \"../../modules/tasksModule\";\nimport PatternAddMenu from './PatternAddMenu';\nimport PatternDeleteMenu from './PatternDeleteMenu';\nimport PatternEditMenu from './PatternEditMenu';\nconst useStyles = makeStyles(theme => createStyles({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  home: {\n    width: 'fit-content',\n    margin: 'auto',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icons: {\n    width: 'fit-content',\n    margin: 'auto',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icon: {\n    margin: theme.spacing(2)\n  }\n}));\nexport default function SimpleSelect(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [pattern, setPattern] = React.useState(\"\");\n  const {\n    userTaskInfo\n  } = useSelector(state => state.tasks);\n  const [openMenu, setOpenMune] = React.useState(9999);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  useEffect(() => {\n    if (props.choice == 0 && userTaskInfo.pattern.length > 0) {\n      props.setChoice(userTaskInfo.pattern[0].patternId);\n      console.log(userTaskInfo.pattern[0].patternId);\n    }\n\n    if (userTaskInfo.pattern.length == 0) {\n      console.log('check length 0');\n      props.setChoice(0);\n    }\n  }, []); // props.setChoice(userTaskInfo.pattern[0].patternId);\n\n  const handleChange = event => {\n    setPattern(event.target.value);\n    props.setChoice(event.target.value);\n  };\n\n  const handleClick = value => event => {\n    setAnchorEl(event.currentTarget);\n    setOpenMune(value);\n    console.log(\"openMenu:\" + openMenu);\n  };\n\n  const patternAddHandler = patternName => {\n    console.log(\"Patterntest patternAddHandler\");\n    dispatch(patternRegister(patternName));\n  };\n\n  const patternDeleteHandler = patternName => {\n    // 削除時、未来に登録されているパターンは削除する必要がある\n    console.log(\"Patterntest patternDeleteHandler\");\n    dispatch(patternDelete(props.choice));\n    props.setChoice(0);\n  }; // パターン名称編集用処理。選択されているパターンIDと引数で取得した新しい名称をReduxActionへ連携する。\n\n\n  const patternEditHandler = patternName => {\n    console.log(\"Patterntest patternEditHandler\");\n    const editPatternId = props.choice;\n    dispatch(patternNameEdit({\n      editPatternId,\n      patternName\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Pattern\"), __jsx(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: props.choice,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, userTaskInfo.pattern.map((pattern, index) => {\n    return __jsx(MenuItem, {\n      key: index + \"_\" + pattern.patternName,\n      value: pattern.patternId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 32\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 108\n      }\n    }, pattern.patternName));\n  }))), __jsx(\"div\", {\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, __jsx(IconButton, {\n    edge: \"end\",\n    size: \"small\",\n    \"aria-label\": \"comments\",\n    onClick: handleClick(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, __jsx(AddCircleIcon, {\n    color: \"primary\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  })), __jsx(PatternAddMenu, {\n    openMenu: openMenu,\n    setOpenMune: setOpenMune,\n    anchorEl: anchorEl,\n    Handler: patternAddHandler,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), __jsx(IconButton, {\n    edge: \"end\",\n    size: \"small\",\n    \"aria-label\": \"comments\",\n    onClick: handleClick(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, __jsx(RemoveCircleIcon, {\n    color: \"secondary\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })), __jsx(PatternDeleteMenu, {\n    openMenu: openMenu,\n    setOpenMune: setOpenMune,\n    anchorEl: anchorEl,\n    Handler: patternDeleteHandler,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), __jsx(IconButton, {\n    edge: \"end\",\n    size: \"small\",\n    \"aria-label\": \"comments\",\n    onClick: handleClick(3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, __jsx(EditIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  })), __jsx(PatternEditMenu, {\n    openMenu: openMenu,\n    setOpenMune: setOpenMune,\n    anchorEl: anchorEl,\n    Handler: patternEditHandler,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/Select.tsx"],"names":["React","useEffect","createStyles","makeStyles","InputLabel","MenuItem","FormControl","Select","useDispatch","useSelector","RemoveCircleIcon","AddCircleIcon","IconButton","EditIcon","patternDelete","patternNameEdit","patternRegister","PatternAddMenu","PatternDeleteMenu","PatternEditMenu","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","home","width","display","justifyContent","alignItems","icons","icon","SimpleSelect","props","classes","dispatch","pattern","setPattern","useState","userTaskInfo","state","tasks","openMenu","setOpenMune","anchorEl","setAnchorEl","choice","length","setChoice","patternId","console","log","handleChange","event","target","value","handleClick","currentTarget","patternAddHandler","patternName","patternDeleteHandler","patternEditHandler","editPatternId","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../modules/rootReducer\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { patternDelete, patternNameEdit, patternRegister } from \"../../modules/tasksModule\";\r\nimport PatternAddMenu from './PatternAddMenu';\r\nimport PatternDeleteMenu from './PatternDeleteMenu';\r\nimport PatternEditMenu from './PatternEditMenu';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        home: {\r\n            width: 'fit-content',\r\n            margin: 'auto',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        icons: {\r\n            width: 'fit-content',\r\n            margin: 'auto',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        icon: {\r\n            margin: theme.spacing(2),\r\n        },\r\n    })\r\n);\r\n\r\nexport default function SimpleSelect(props: { choice: number, setChoice: React.Dispatch<React.SetStateAction<number>> }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [pattern, setPattern] = React.useState(\"\");\r\n    const { userTaskInfo } = useSelector((state: RootState) => state.tasks);\r\n\r\n    const [openMenu, setOpenMune] = React.useState(9999);\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    useEffect(\r\n        () => {\r\n            if (props.choice == 0 && userTaskInfo.pattern.length > 0) {\r\n                props.setChoice(userTaskInfo.pattern[0].patternId);\r\n                console.log(userTaskInfo.pattern[0].patternId);\r\n            }\r\n            if (userTaskInfo.pattern.length == 0) {\r\n                console.log('check length 0');\r\n                props.setChoice(0);\r\n            }\r\n        }, []\r\n    );\r\n\r\n    // props.setChoice(userTaskInfo.pattern[0].patternId);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setPattern(event.target.value as string);\r\n        props.setChoice(event.target.value as number);\r\n    };\r\n\r\n    const handleClick = (value: number) => (event: { currentTarget: React.SetStateAction<HTMLElement>; }) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpenMune(value);\r\n        console.log(\"openMenu:\" + openMenu);\r\n    };\r\n\r\n    const patternAddHandler = (patternName: string) => {\r\n        console.log(\"Patterntest patternAddHandler\");\r\n        dispatch(patternRegister(patternName));\r\n    };\r\n    const patternDeleteHandler = (patternName: string) => {\r\n        // 削除時、未来に登録されているパターンは削除する必要がある\r\n        console.log(\"Patterntest patternDeleteHandler\");\r\n        dispatch(patternDelete(props.choice));\r\n        props.setChoice(0);\r\n    };\r\n    // パターン名称編集用処理。選択されているパターンIDと引数で取得した新しい名称をReduxActionへ連携する。\r\n    const patternEditHandler = (patternName: string) => {\r\n        console.log(\"Patterntest patternEditHandler\");\r\n        const editPatternId = props.choice;\r\n        dispatch(patternNameEdit({ editPatternId, patternName }));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.home}>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Pattern</InputLabel>\r\n                {/* valueには選択している項目のvalueが設定される */}\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={props.choice}\r\n                    onChange={handleChange}\r\n                >\r\n                    {userTaskInfo.pattern.map((pattern, index) => {\r\n                        return <MenuItem key={index + \"_\" + pattern.patternName} value={pattern.patternId}><span>{pattern.patternName}</span></MenuItem>\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n            <div className={classes.icons}>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    size=\"small\"\r\n                    aria-label=\"comments\"\r\n                    onClick={handleClick(1)}\r\n                >\r\n                    <AddCircleIcon color=\"primary\" className={classes.icon} />\r\n                </IconButton>\r\n                <PatternAddMenu openMenu={openMenu} setOpenMune={setOpenMune} anchorEl={anchorEl} Handler={patternAddHandler} index={1} />\r\n\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    size=\"small\"\r\n                    aria-label=\"comments\"\r\n                    onClick={handleClick(2)}\r\n                >\r\n                    <RemoveCircleIcon color=\"secondary\" className={classes.icon} />\r\n                </IconButton>\r\n                <PatternDeleteMenu openMenu={openMenu} setOpenMune={setOpenMune} anchorEl={anchorEl} Handler={patternDeleteHandler} index={2} />\r\n\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    size=\"small\"\r\n                    aria-label=\"comments\"\r\n                    onClick={handleClick(3)}\r\n                >\r\n                    <EditIcon className={classes.icon} />\r\n                </IconButton>\r\n                <PatternEditMenu openMenu={openMenu} setOpenMune={setOpenMune} anchorEl={anchorEl} Handler={patternEditHandler} index={3} />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}