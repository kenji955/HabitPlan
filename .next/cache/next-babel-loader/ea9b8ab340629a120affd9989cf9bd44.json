{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\n// import { Route, Switch, withRouter, Redirect,BrowserRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tasks from \"./components/view/tasks\";\nconst useStyles = makeStyles({\n  button: {\n    backgroundColor: \"green\"\n  }\n});\n\nconst App = () => {\n  const {\n    0: todos,\n    1: setTodos\n  } = useState([]);\n  const {\n    0: tmpTodo,\n    1: setTmpTodo\n  } = useState(\"\");\n  const classes = useStyles();\n\n  const addTodo = () => {\n    // formの内容が空白の場合はalertを出す\n    if (tmpTodo === \"\") {\n      alert(\"文字を入力してください\");\n      return;\n    }\n\n    setTodos([...todos, tmpTodo]);\n    setTmpTodo(\"\");\n  }; // todoを削除する処理\n  // const deleteTodo = (index) => {\n  //     const newTodos = todos.filter((todo, todoIndex) => {\n  //         return index !== todoIndex;\n  //     });\n  //     setTodos(newTodos);\n  // };\n  // let routes = (\n  //     <Switch>\n  //         <Route path=\"/tasks\" component={Tasks} />\n  //         <Route path=\"/\" exact component={DayPlanPC} />\n  //         <Redirect to=\"/\" />\n  //     </Switch>\n  // );\n\n\n  return (// <DayPlanPC />\n    __jsx(Tasks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }) // <BrowserRouter>{routes}</BrowserRouter>\n    // <Container fixed>\n    //     <h1>Todo App</h1>\n    //     <Box component=\"span\" m={1} className={classes.button}>\n    //         {/* <Button variant=\"contained\" color=\"primary\">\n    //                 Test\n    //             </Button> */}\n    //         <FloatingActionButtonZoom />\n    //         <BottomNavigation />\n    //     </Box>\n    //     {/* <Box>\n    //     </Box> */}\n    // </Container>\n\n  );\n};\n\nexport default App; // ReactDOM.render( App );","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/pages/index.tsx"],"names":["React","useState","makeStyles","Tasks","useStyles","button","backgroundColor","App","todos","setTodos","tmpTodo","setTmpTodo","classes","addTodo","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AAQA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AACzBG,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb;AADiB,CAAD,CAA5B;;AAMA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMW,OAAO,GAAGR,SAAS,EAAzB;;AAEA,QAAMS,OAAO,GAAG,MAAM;AAClB;AACA,QAAIH,OAAO,KAAK,EAAhB,EAAoB;AAChBI,MAAAA,KAAK,CAAC,aAAD,CAAL;AACA;AACH;;AACDL,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,OAAX,CAAD,CAAR;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GARD,CANc,CAgBd;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACI;AACA,UAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfJ;AAiBH,CAjDD;;AAmDA,eAAeJ,GAAf,C,CACA","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n// import { Route, Switch, withRouter, Redirect,BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport FloatingActionButtonZoom from \"./components/view/contents/FloatingActionButton\";\r\nimport BottomNavigation from \"./components/view/contents/BottomNavigation\";\r\nimport DayPlanPC from \"./components/view/DayPlanPC\";\r\nimport Tasks from \"./components/view/tasks\";\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        backgroundColor: \"green\",\r\n    },\r\n});\r\n\r\nconst App = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [tmpTodo, setTmpTodo] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n\r\n    const addTodo = () => {\r\n        // formの内容が空白の場合はalertを出す\r\n        if (tmpTodo === \"\") {\r\n            alert(\"文字を入力してください\");\r\n            return;\r\n        }\r\n        setTodos([...todos, tmpTodo]);\r\n        setTmpTodo(\"\");\r\n    };\r\n\r\n    // todoを削除する処理\r\n    // const deleteTodo = (index) => {\r\n    //     const newTodos = todos.filter((todo, todoIndex) => {\r\n    //         return index !== todoIndex;\r\n    //     });\r\n    //     setTodos(newTodos);\r\n    // };\r\n\r\n    // let routes = (\r\n    //     <Switch>\r\n    //         <Route path=\"/tasks\" component={Tasks} />\r\n    //         <Route path=\"/\" exact component={DayPlanPC} />\r\n    //         <Redirect to=\"/\" />\r\n    //     </Switch>\r\n    // );\r\n\r\n    return (\r\n        // <DayPlanPC />\r\n        <Tasks />\r\n        // <BrowserRouter>{routes}</BrowserRouter>\r\n        // <Container fixed>\r\n        //     <h1>Todo App</h1>\r\n        //     <Box component=\"span\" m={1} className={classes.button}>\r\n        //         {/* <Button variant=\"contained\" color=\"primary\">\r\n        //                 Test\r\n        //             </Button> */}\r\n        //         <FloatingActionButtonZoom />\r\n        //         <BottomNavigation />\r\n        //     </Box>\r\n        //     {/* <Box>\r\n        //     </Box> */}\r\n        // </Container>\r\n    );\r\n};\r\n\r\nexport default App;\r\n// ReactDOM.render( App );\r\n"]},"metadata":{},"sourceType":"module"}