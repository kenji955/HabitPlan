{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TaskModal from \"./TaskModal\";\nimport TaskPlus from \"./taskPlus\";\nimport { useSelector } from \"react-redux\";\nconst useStyles = makeStyles(theme => createStyles({\n  roots: {\n    width: \"100%\",\n    maxWidth: 720,\n    margin: \"auto\",\n    backgroundColor: theme.palette.background.paper\n  },\n  icon: {\n    display: \"flex\",\n    margin: \"10px auto 5px auto\"\n  }\n}));\nexport default function CheckboxList() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(9999);\n  const {\n    userTaskInfo\n  } = useSelector(state => state.tasks);\n  console.log('check tasklist');\n\n  const handleToggle = value => () => {\n    setOpen(value);\n    console.log(\"open:\" + open);\n  };\n\n  return __jsx(List, {\n    className: classes.roots\n  }, userTaskInfo.tasks.map((task, index) => {\n    const labelId = `checkbox-list-label-${task.detail[\"testDetail1\"]}`;\n    return __jsx(\"div\", {\n      key: labelId + '_' + index\n    }, __jsx(ListItem, {\n      key: task.detail['title'] + \":\" + index,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(index)\n    }, __jsx(ListItemText, {\n      id: labelId,\n      primary: `Line item ${index + 1} ${task.detail[\"testDetail1\"]} ${task.detail[\"testDetail2\"]}`\n    }), __jsx(ListItemSecondaryAction, null, __jsx(TaskModal, {\n      open: open,\n      setOpen: setOpen,\n      task: task,\n      index: index\n    }), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\"\n    }, __jsx(CommentIcon, null)))), __jsx(Divider, null));\n  }), __jsx(TaskPlus, {\n    num: userTaskInfo.tasks.length + 1\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}