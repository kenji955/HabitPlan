{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useMemo } from \"react\";\n// import { Route, Switch, withRouter, Redirect,BrowserRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DayPlanPC from \"./DayPlan\";\nimport FirebaseAuthComponent from \"../components/test/firebaseTest/FirebaseAuthComponent\";\nimport { useSelector } from \"react-redux\";\nconst useStyles = makeStyles({\n  button: {\n    backgroundColor: \"green\"\n  }\n});\n\nconst App = () => {\n  const {\n    userId\n  } = useSelector(state => state.user);\n\n  let RenderComponent = __jsx(FirebaseAuthComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 40\n    }\n  });\n\n  useMemo(() => {\n    if (userId == \"\") {\n      RenderComponent = __jsx(FirebaseAuthComponent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 31\n        }\n      });\n    } else {\n      RenderComponent = __jsx(DayPlanPC, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 31\n        }\n      });\n    }\n  }, [userId]);\n  return RenderComponent; // <DayPlanPC />\n  // <Tasks />\n  // <BrowserRouter>{routes}</BrowserRouter>\n  // <Container fixed>\n  //     <h1>Todo App</h1>\n  //     <Box component=\"span\" m={1} className={classes.button}>\n  //         {/* <Button variant=\"contained\" color=\"primary\">\n  //                 Test\n  //             </Button> */}\n  //         <FloatingActionButtonZoom />\n  //         <BottomNavigation />\n  //     </Box>\n  //     {/* <Box>\n  //     </Box> */}\n  // </Container>\n};\n\nexport default App; // ReactDOM.render( App );","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/pages/index.tsx"],"names":["React","useMemo","makeStyles","DayPlanPC","FirebaseAuthComponent","useSelector","useStyles","button","backgroundColor","App","userId","state","user","RenderComponent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAAyC,OAAzC;AAEA;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AAOA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAOC,qBAAP,MAAkC,uDAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AACzBK,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb;AADiB,CAAD,CAA5B;;AAMA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM;AAAEC,IAAAA;AAAF,MAAaL,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACC,IAA7B,CAA9B;;AAEA,MAAIC,eAA4B,GAAG,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC;;AACAZ,EAAAA,OAAO,CAAC,MAAM;AACV,QAAIS,MAAM,IAAI,EAAd,EAAkB;AACdG,MAAAA,eAAe,GAAG,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB;AACH,KAFD,MAEO;AACHA,MAAAA,eAAe,GAAG,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB;AACH;AACJ,GANM,EAMJ,CAACH,MAAD,CANI,CAAP;AAQA,SAAOG,eAAP,CAZc,CAad;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA5BD;;AA8BA,eAAeJ,GAAf,C,CACA","sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import { Route, Switch, withRouter, Redirect,BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport FloatingActionButtonZoom from \"../components/view/FloatingActionButton\";\r\nimport BottomNavigation from \"../components/view/BottomNavigation\";\r\nimport DayPlanPC from \"./DayPlan\";\r\nimport Tasks from \"./tasks\";\r\nimport FirebaseAuthComponent from \"../components/test/firebaseTest/FirebaseAuthComponent\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../modules/rootReducer\";\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        backgroundColor: \"green\",\r\n    },\r\n});\r\n\r\nconst App = () => {\r\n    const { userId } = useSelector((state: RootState) => state.user);\r\n\r\n    let RenderComponent: JSX.Element = <FirebaseAuthComponent />;\r\n    useMemo(() => {\r\n        if (userId == \"\") {\r\n            RenderComponent = <FirebaseAuthComponent />;\r\n        } else {\r\n            RenderComponent = <DayPlanPC />;\r\n        }\r\n    }, [userId]);\r\n\r\n    return RenderComponent;\r\n    // <DayPlanPC />\r\n    // <Tasks />\r\n    // <BrowserRouter>{routes}</BrowserRouter>\r\n    // <Container fixed>\r\n    //     <h1>Todo App</h1>\r\n    //     <Box component=\"span\" m={1} className={classes.button}>\r\n    //         {/* <Button variant=\"contained\" color=\"primary\">\r\n    //                 Test\r\n    //             </Button> */}\r\n    //         <FloatingActionButtonZoom />\r\n    //         <BottomNavigation />\r\n    //     </Box>\r\n    //     {/* <Box>\r\n    //     </Box> */}\r\n    // </Container>\r\n};\r\n\r\nexport default App;\r\n// ReactDOM.render( App );\r\n"]},"metadata":{},"sourceType":"module"}