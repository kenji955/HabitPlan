{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _ref;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  userTaskInfo: {\n    calendar: _defineProperty({}, new Date(\"Thu, 22 May 2020 02:00:00\").getFullYear(), _defineProperty({}, new Date(\"Thu, 22 May 2020 02:00:00\").getMonth() + 1, (_ref = {}, _defineProperty(_ref, new Date(\"Thu, 22 May 2020 02:00:00\").getDate(), {\n      PatternId: 1,\n      tasks: [{\n        detail1: \"testDetail1 22 1\",\n        detail2: \"testDetail2 22 1\",\n        flug: false\n      }, {\n        detail1: \"testDetail1 22 2\",\n        detail2: \"testDetail2 22 2\",\n        flug: false\n      }]\n    }), _defineProperty(_ref, new Date(\"Thu, 23 May 2020 02:00:00\").getDate(), {\n      PatternId: 1,\n      tasks: [{\n        detail1: \"testDetail1 23 1\",\n        detail2: \"testDetail2 23 1\",\n        flug: false\n      }, {\n        detail1: \"testDetail1 23 2\",\n        detail2: \"testDetail2 23 2\",\n        flug: false\n      }]\n    }), _ref))),\n    //             [date: number]: {\n    //                 PatternId: number;\n    //                 tasks: {\n    //                     detail1: string;\n    //                     detail2: string;\n    //                     flug: boolean;\n    //                 }[];\n    //             }[];\n    //         }[];\n    //     }[];\n    // ]\n    // year: new Date(\"Thu, 22 May 2020 02:00:00\").getFullYear(),[{\n    //     month: new Date(\"Thu, 22 May 2020 02:00:00\").getMonth() + 1,[{\n    //         date: new Date(\"Thu, 22 May 2020 02:00:00\").getDate(),[{\n    //             PatternId: 1,\n    //             tasks: [\n    //                 {\n    //                     detail1: \"testDetail1 22 1\",\n    //                     detail2: \"testDetail2 22 1\",\n    //                     flug: false,\n    //                 },\n    //                 {\n    //                     detail1: \"testDetail1 22 2\",\n    //                     detail2: \"testDetail2 22 2\",\n    //                     flug: false,\n    //                 },\n    //             ],\n    //         }]\n    //     }]\n    // }]\n    // {\n    //     year: new Date(\"Thu, 23 May 2020 02:00:00\").getFullYear(),\n    //     month: new Date(\"Thu, 23 May 2020 02:00:00\").getMonth() + 1,\n    //     date: new Date(\"Thu, 23 May 2020 02:00:00\").getDate(),\n    //     PatternId: 2,\n    //     tasks: [\n    //         {\n    //             detail1: \"testDetail1 23 1\",\n    //             detail2: \"testDetail2 23 1\",\n    //             flug: false,\n    //         },\n    //         {\n    //             detail1: \"testDetail1 23 2\",\n    //             detail2: \"testDetail2 23 2\",\n    //             flug: false,\n    //         },\n    //     ],\n    // },\n    pattern: [{\n      patternId: 1,\n      patternName: \"testPattern1\"\n    }, {\n      patternId: 2,\n      patternName: \"testPattern2\"\n    }],\n    tasks: [{\n      detail1: \"testDetail1A\",\n      detail2: \"testDetail2A\",\n      patternInfo: [{\n        patternID: 1,\n        order: 1\n      }]\n    }, {\n      detail1: \"testDetail1A\",\n      detail2: \"testDetail2A\",\n      patternInfo: [{\n        patternID: 1,\n        order: 2\n      }]\n    }, {\n      detail1: \"testDetail1C\",\n      detail2: \"testDetail2C\",\n      patternInfo: [{\n        patternID: 2,\n        order: 1\n      }, {\n        patternID: 1,\n        order: 3\n      }]\n    }, {\n      detail1: \"testDetail1D\",\n      detail2: \"testDetail2D\",\n      patternInfo: [{\n        patternID: 2,\n        order: 2\n      }]\n    }]\n  }\n};\nvar tasksModule = createSlice({\n  name: \"tasks\",\n  initialState: initialState,\n  reducers: {\n    init: function init(state, action) {\n      var data = action.payload;\n      console.log(\"init data\");\n      console.log(data); // state = {...data};\n\n      console.log(\"init state.userTaskInfo.calendar 前\"); // console.log(state.userTaskInfo.calendar[0].PatternId);\n\n      state.userTaskInfo = data;\n      console.log(\"init state.userTaskInfo.calendar 後\");\n      console.log(state); // console.log(state.userTaskInfo.calendar[0]);\n    },\n    Register: function Register(state, action) {\n      var data = action.payload;\n      state = _objectSpread(_objectSpread({}, state), data); // console.log('state');\n      // console.log(state);\n    },\n    allDelete: function allDelete(state) {\n      state = initialState;\n      console.log(\"check allDelete\");\n    },\n    // DayPlanにてタスクをクリックした際に完了フラグをtrueに変更する処理\n    taskCheckComplete: function taskCheckComplete(state, action) {\n      state.userTaskInfo.calendar[action.payload[0]][action.payload[1]][action.payload[2]].tasks[action.payload[3]].flug = !state.userTaskInfo.calendar[action.payload[0]][action.payload[1]][action.payload[2]].tasks[action.payload[3]].flug;\n    }\n  }\n});\nvar _tasksModule$actions = tasksModule.actions,\n    init = _tasksModule$actions.init,\n    Register = _tasksModule$actions.Register,\n    allDelete = _tasksModule$actions.allDelete,\n    taskCheckComplete = _tasksModule$actions.taskCheckComplete;\nexport { init, Register, allDelete, taskCheckComplete };\nexport default tasksModule;","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/modules/tasksModule.tsx"],"names":["createSlice","initialState","userTaskInfo","calendar","Date","getFullYear","getMonth","getDate","PatternId","tasks","detail1","detail2","flug","pattern","patternId","patternName","patternInfo","patternID","order","tasksModule","name","reducers","init","state","action","data","payload","console","log","Register","allDelete","taskCheckComplete","actions"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport {\r\n    calendar,\r\n    pattern,\r\n    tasks,\r\n    userTask,\r\n    userTaskInfo,\r\n} from \"./userTasksType\";\r\n\r\ntype State = {\r\n    [key: string]: string;\r\n};\r\n\r\nconst initialState: userTask = {\r\n    userTaskInfo: {\r\n        calendar: \r\n            {\r\n                [new Date(\"Thu, 22 May 2020 02:00:00\").getFullYear()]: {\r\n                    [new Date(\"Thu, 22 May 2020 02:00:00\").getMonth() + 1]: {\r\n                        [new Date(\"Thu, 22 May 2020 02:00:00\").getDate()]: {\r\n                            PatternId: 1,\r\n                            tasks: [\r\n                                {\r\n                                    detail1: \"testDetail1 22 1\",\r\n                                    detail2: \"testDetail2 22 1\",\r\n                                    flug: false,\r\n                                },\r\n                                {\r\n                                    detail1: \"testDetail1 22 2\",\r\n                                    detail2: \"testDetail2 22 2\",\r\n                                    flug: false,\r\n                                },\r\n                            ],\r\n                        },\r\n                        [new Date(\"Thu, 23 May 2020 02:00:00\").getDate()]: {\r\n                            PatternId: 1,\r\n                            tasks: [\r\n                                {\r\n                                    detail1: \"testDetail1 23 1\",\r\n                                    detail2: \"testDetail2 23 1\",\r\n                                    flug: false,\r\n                                },\r\n                                {\r\n                                    detail1: \"testDetail1 23 2\",\r\n                                    detail2: \"testDetail2 23 2\",\r\n                                    flug: false,\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    \r\n                },\r\n            },\r\n            //             [date: number]: {\r\n            //                 PatternId: number;\r\n            //                 tasks: {\r\n            //                     detail1: string;\r\n            //                     detail2: string;\r\n            //                     flug: boolean;\r\n            //                 }[];\r\n            //             }[];\r\n            //         }[];\r\n            //     }[];\r\n\r\n            // ]\r\n            // year: new Date(\"Thu, 22 May 2020 02:00:00\").getFullYear(),[{\r\n            //     month: new Date(\"Thu, 22 May 2020 02:00:00\").getMonth() + 1,[{\r\n            //         date: new Date(\"Thu, 22 May 2020 02:00:00\").getDate(),[{\r\n            //             PatternId: 1,\r\n            //             tasks: [\r\n            //                 {\r\n            //                     detail1: \"testDetail1 22 1\",\r\n            //                     detail2: \"testDetail2 22 1\",\r\n            //                     flug: false,\r\n            //                 },\r\n            //                 {\r\n            //                     detail1: \"testDetail1 22 2\",\r\n            //                     detail2: \"testDetail2 22 2\",\r\n            //                     flug: false,\r\n            //                 },\r\n            //             ],\r\n\r\n            //         }]\r\n\r\n            //     }]\r\n\r\n            // }]\r\n            // {\r\n            //     year: new Date(\"Thu, 23 May 2020 02:00:00\").getFullYear(),\r\n            //     month: new Date(\"Thu, 23 May 2020 02:00:00\").getMonth() + 1,\r\n            //     date: new Date(\"Thu, 23 May 2020 02:00:00\").getDate(),\r\n            //     PatternId: 2,\r\n            //     tasks: [\r\n            //         {\r\n            //             detail1: \"testDetail1 23 1\",\r\n            //             detail2: \"testDetail2 23 1\",\r\n            //             flug: false,\r\n            //         },\r\n            //         {\r\n            //             detail1: \"testDetail1 23 2\",\r\n            //             detail2: \"testDetail2 23 2\",\r\n            //             flug: false,\r\n            //         },\r\n            //     ],\r\n            // },\r\n        \r\n        pattern: [\r\n            {\r\n                patternId: 1,\r\n                patternName: \"testPattern1\",\r\n            },\r\n            {\r\n                patternId: 2,\r\n                patternName: \"testPattern2\",\r\n            },\r\n        ],\r\n        tasks: [\r\n            {\r\n                detail1: \"testDetail1A\",\r\n                detail2: \"testDetail2A\",\r\n                patternInfo: [\r\n                    {\r\n                        patternID: 1,\r\n                        order: 1,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                detail1: \"testDetail1A\",\r\n                detail2: \"testDetail2A\",\r\n                patternInfo: [\r\n                    {\r\n                        patternID: 1,\r\n                        order: 2,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                detail1: \"testDetail1C\",\r\n                detail2: \"testDetail2C\",\r\n                patternInfo: [\r\n                    {\r\n                        patternID: 2,\r\n                        order: 1,\r\n                    },\r\n                    {\r\n                        patternID: 1,\r\n                        order: 3,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                detail1: \"testDetail1D\",\r\n                detail2: \"testDetail2D\",\r\n                patternInfo: [\r\n                    {\r\n                        patternID: 2,\r\n                        order: 2,\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst tasksModule = createSlice({\r\n    name: \"tasks\",\r\n    initialState,\r\n    reducers: {\r\n        init(state: userTask, action: PayloadAction<userTaskInfo>) {\r\n            const data = action.payload;\r\n            console.log(\"init data\");\r\n            console.log(data);\r\n            // state = {...data};\r\n            console.log(\"init state.userTaskInfo.calendar 前\");\r\n            // console.log(state.userTaskInfo.calendar[0].PatternId);\r\n            state.userTaskInfo = data;\r\n            console.log(\"init state.userTaskInfo.calendar 後\");\r\n            console.log(state);\r\n            // console.log(state.userTaskInfo.calendar[0]);\r\n        },\r\n        Register(state: userTask, action: PayloadAction<userTask>) {\r\n            const data = action.payload;\r\n\r\n            state = { ...state, ...data };\r\n            // console.log('state');\r\n            // console.log(state);\r\n        },\r\n        allDelete(state: userTask) {\r\n            state = initialState;\r\n            console.log(\"check allDelete\");\r\n        },\r\n        // DayPlanにてタスクをクリックした際に完了フラグをtrueに変更する処理\r\n        taskCheckComplete(state: userTask, action: PayloadAction<number[]>) {\r\n            state.userTaskInfo.calendar[action.payload[0]][action.payload[1]][action.payload[2]].tasks[action.payload[3]].flug = !state.userTaskInfo.calendar[action.payload[0]][action.payload[1]][action.payload[2]].tasks[action.payload[3]].flug;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    init,\r\n    Register,\r\n    allDelete,\r\n    taskCheckComplete,\r\n} = tasksModule.actions;\r\n\r\nexport default tasksModule;\r\n"]},"metadata":{},"sourceType":"module"}