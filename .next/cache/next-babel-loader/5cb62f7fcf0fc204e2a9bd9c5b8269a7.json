{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\TaskList.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Popper from \"@material-ui/core/Popper\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport TaskModal from \"./TaskModal\";\nimport TaskPlus from \"./taskPlus\"; // import Popper from \"./Popper\";\n\nimport { useSelector } from \"react-redux\";\nconst useStyles = makeStyles(theme => createStyles({\n  roots: {\n    width: \"100%\",\n    maxWidth: 720,\n    margin: \"auto\",\n    backgroundColor: theme.palette.background.paper\n  },\n  icon: {\n    display: \"flex\",\n    margin: \"10px auto 5px auto\"\n  },\n  paper: {\n    border: \"1px solid\",\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function CheckboxList() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(9999);\n  const {\n    userTaskInfo\n  } = useSelector(state => state.tasks);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const openPopper = Boolean(anchorEl);\n  const id = open ? \"simple-popper\" : undefined;\n\n  const handleToggle = value => () => {\n    setOpen(value);\n    console.log(\"open:\" + openPopper);\n  };\n\n  const deleteTaskHandler = index => () => {};\n\n  return __jsx(List, {\n    className: classes.roots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, userTaskInfo.tasks.map((task, index) => {\n    const labelId = `checkbox-list-label-${task.detail[\"testDetail1\"]}`;\n    return __jsx(\"div\", {\n      key: labelId + \"_\" + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, __jsx(ListItem, {\n      key: task.detail[\"title\"] + \":\" + index,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, __jsx(ListItemText, {\n      id: labelId,\n      primary: `Line item ${index + 1} ${task.detail[\"testDetail1\"]} ${task.detail[\"testDetail2\"]}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }), __jsx(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, __jsx(TaskModal, {\n      open: open,\n      setOpen: setOpen,\n      task: task,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, __jsx(CommentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    })), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      onClick: deleteTaskHandler(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, __jsx(RemoveCircleIcon, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    })), __jsx(Popper, {\n      id: id,\n      open: openPopper,\n      anchorEl: anchorEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, \"The content of the Popper.\")))), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }));\n  }), __jsx(TaskPlus, {\n    num: userTaskInfo.tasks.length + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/TaskList.tsx"],"names":["React","createStyles","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","CommentIcon","Divider","Popper","RemoveCircleIcon","TaskModal","TaskPlus","useSelector","useStyles","theme","roots","width","maxWidth","margin","backgroundColor","palette","background","paper","icon","display","border","padding","spacing","CheckboxList","classes","open","setOpen","useState","userTaskInfo","state","tasks","anchorEl","setAnchorEl","handleClick","event","currentTarget","openPopper","Boolean","id","undefined","handleToggle","value","console","log","deleteTaskHandler","index","map","task","labelId","detail","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\n\r\nimport TaskModal from \"./TaskModal\";\r\nimport TaskPlus from \"./taskPlus\";\r\n// import Popper from \"./Popper\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../modules/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        roots: {\r\n            width: \"100%\",\r\n            maxWidth: 720,\r\n            margin: \"auto\",\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        icon: {\r\n            display: \"flex\",\r\n            margin: \"10px auto 5px auto\",\r\n        },\r\n        paper: {\r\n            border: \"1px solid\",\r\n            padding: theme.spacing(1),\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n    })\r\n);\r\n\r\nexport default function CheckboxList() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(9999);\r\n    const { userTaskInfo } = useSelector((state: RootState) => state.tasks);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    };\r\n\r\n    const openPopper = Boolean(anchorEl);\r\n    const id = open ? \"simple-popper\" : undefined;\r\n\r\n    const handleToggle = (value: number) => () => {\r\n        setOpen(value);\r\n        console.log(\"open:\" + openPopper);\r\n    };\r\n\r\n    const deleteTaskHandler = (index: number) => () => {};\r\n\r\n    return (\r\n        <List className={classes.roots}>\r\n            {userTaskInfo.tasks.map((task, index) => {\r\n                const labelId = `checkbox-list-label-${task.detail[\"testDetail1\"]}`;\r\n\r\n                return (\r\n                    <div key={labelId + \"_\" + index}>\r\n                        <ListItem\r\n                            key={task.detail[\"title\"] + \":\" + index}\r\n                            role={undefined}\r\n                            dense\r\n                            button\r\n                            onClick={handleToggle(index)}\r\n                        >\r\n                            <ListItemText\r\n                                id={labelId}\r\n                                primary={`Line item ${index + 1} ${\r\n                                    task.detail[\"testDetail1\"]\r\n                                } ${task.detail[\"testDetail2\"]}`}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <TaskModal\r\n                                    open={open}\r\n                                    setOpen={setOpen}\r\n                                    task={task}\r\n                                    index={index}\r\n                                />\r\n                                <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                    <CommentIcon />\r\n                                </IconButton>\r\n                                <IconButton\r\n                                    edge=\"end\"\r\n                                    aria-label=\"comments\"\r\n                                    onClick={deleteTaskHandler(index)}\r\n                                >\r\n                                    <RemoveCircleIcon color=\"secondary\" />\r\n                                    {/* {/* <Popper /> */}\r\n                                </IconButton>\r\n                                <Popper\r\n                                    id={id}\r\n                                    open={openPopper}\r\n                                    anchorEl={anchorEl}\r\n                                >\r\n                                    <div className={classes.paper}>\r\n                                        The content of the Popper.\r\n                                    </div>\r\n                                </Popper>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </div>\r\n                );\r\n            })}\r\n            <TaskPlus num={userTaskInfo.tasks.length + 1} />\r\n        </List>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}