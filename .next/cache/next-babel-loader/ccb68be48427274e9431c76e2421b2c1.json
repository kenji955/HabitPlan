{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  userTaskInfo: {\n    calendar: [{\n      date: new Date(\"Thu, 01 May 2008 02:00:00\"),\n      PatternId: 1,\n      tasks: [{\n        detail1: \"detail1\",\n        detail2: \"detail2\",\n        flug: false\n      }]\n    }],\n    pattern: [{\n      patternId: 1,\n      patternName: \"pattern1\"\n    }],\n    tasks: [{\n      detail1: \"detail1\",\n      detail2: \"detail2\",\n      patternInfo: [{\n        patternID: 1,\n        order: 1\n      }]\n    }]\n  }\n};\nconst tasksModule = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    Register(state, action) {\n      const data = action.payload;\n      state = _objectSpread(_objectSpread({}, state), data); // console.log('state');\n      // console.log(state);\n    }\n\n  }\n});\nexport const {\n  Register\n} = tasksModule.actions;\nexport default tasksModule;","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/modules/tasksModule.tsx"],"names":["createSlice","initialState","userTaskInfo","calendar","date","Date","PatternId","tasks","detail1","detail2","flug","pattern","patternId","patternName","patternInfo","patternID","order","tasksModule","name","reducers","Register","state","action","data","payload","actions"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAOA,MAAMC,YAAsB,GAAG;AAC3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,2BAAT,CADV;AAEIC,MAAAA,SAAS,EAAE,CAFf;AAGIC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,OAAO,EAAE,SADb;AAEIC,QAAAA,OAAO,EAAE,SAFb;AAGIC,QAAAA,IAAI,EAAE;AAHV,OADG;AAHX,KADM,CADA;AAcVC,IAAAA,OAAO,EAAE,CACL;AACIC,MAAAA,SAAS,EAAE,CADf;AAEIC,MAAAA,WAAW,EAAE;AAFjB,KADK,CAdC;AAoBVN,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,OAAO,EAAE,SADb;AAEIC,MAAAA,OAAO,EAAE,SAFb;AAGIK,MAAAA,WAAW,EAAE,CACT;AACIC,QAAAA,SAAS,EAAE,CADf;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADS;AAHjB,KADG;AApBG;AADa,CAA/B;AAoCA,MAAMC,WAAW,GAAGjB,WAAW,CAAC;AAC5BkB,EAAAA,IAAI,EAAE,OADsB;AAE5BjB,EAAAA,YAF4B;AAG5BkB,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,CAACC,KAAD,EAAkBC,MAAlB,EAAmD;AACvD,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;AAEAH,MAAAA,KAAK,mCAAQA,KAAR,GAAkBE,IAAlB,CAAL,CAHuD,CAIvD;AACA;AACH;;AAPK;AAHkB,CAAD,CAA/B;AAcA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAeH,WAAW,CAACQ,OAAjC;AAEP,eAAeR,WAAf","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { calendar, pattern, tasks, userTask } from \"./userTasksType\";\r\n\r\ntype State = {\r\n    [key: string]: string;\r\n};\r\n\r\nconst initialState: userTask = {\r\n    userTaskInfo: {\r\n        calendar: [\r\n            {\r\n                date: new Date(\"Thu, 01 May 2008 02:00:00\"),\r\n                PatternId: 1,\r\n                tasks: [\r\n                    {\r\n                        detail1: \"detail1\",\r\n                        detail2: \"detail2\",\r\n                        flug: false,\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        pattern: [\r\n            {\r\n                patternId: 1,\r\n                patternName: \"pattern1\",\r\n            },\r\n        ],\r\n        tasks: [\r\n            {\r\n                detail1: \"detail1\",\r\n                detail2: \"detail2\",\r\n                patternInfo: [\r\n                    {\r\n                        patternID: 1,\r\n                        order: 1,\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst tasksModule = createSlice({\r\n    name: \"tasks\",\r\n    initialState,\r\n    reducers: {\r\n        Register(state: userTask, action: PayloadAction<userTask>) {\r\n            const data = action.payload;\r\n        \r\n            state = { ...state, ...data };\r\n            // console.log('state');\r\n            // console.log(state);\r\n        },\r\n    },\r\n});\r\n\r\nexport const { Register } = tasksModule.actions;\r\n\r\nexport default tasksModule;\r\n"]},"metadata":{},"sourceType":"module"}