{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  userTaskInfo: {\n    calendar: [{\n      year: new Date(\"Thu, 01 May 1950 02:00:00\").getFullYear(),\n      month: new Date(\"Thu, 01 May 1950 02:00:00\").getMonth() + 1,\n      date: new Date(\"Thu, 01 May 1950 02:00:00\").getDate(),\n      PatternId: 999,\n      tasks: [{\n        detail1: \"testDetail1\",\n        detail2: \"testDetail2\",\n        flug: false\n      }]\n    }],\n    pattern: [{\n      patternId: 999,\n      patternName: \"testPattern1\"\n    }],\n    tasks: [{\n      detail1: \"testDetail1\",\n      detail2: \"testDetail2\",\n      patternInfo: [{\n        patternID: 999,\n        order: 999\n      }]\n    }]\n  }\n};\nconst tasksModule = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    init(state, action) {\n      const data = action.payload;\n      console.log('init data');\n      console.log(data); // state = {...data};\n\n      console.log('init state 前');\n      console.log(state);\n      state.userTaskInfo = _objectSpread({}, data);\n      console.log('init state 後');\n      console.log(state);\n    },\n\n    Register(state, action) {\n      const data = action.payload;\n      state = _objectSpread(_objectSpread({}, state), data); // console.log('state');\n      // console.log(state);\n    },\n\n    allDelete(state) {\n      state = initialState;\n      console.log('check allDelete');\n    }\n\n  }\n});\nexport const {\n  init,\n  Register,\n  allDelete\n} = tasksModule.actions;\nexport default tasksModule;","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/modules/tasksModule.tsx"],"names":["createSlice","initialState","userTaskInfo","calendar","year","Date","getFullYear","month","getMonth","date","getDate","PatternId","tasks","detail1","detail2","flug","pattern","patternId","patternName","patternInfo","patternID","order","tasksModule","name","reducers","init","state","action","data","payload","console","log","Register","allDelete","actions"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAOA,MAAMC,YAAsB,GAAG;AAC3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,2BAAT,EAAsCC,WAAtC,EADV;AAEIC,MAAAA,KAAK,EAAE,IAAIF,IAAJ,CAAS,2BAAT,EAAsCG,QAAtC,KAAmD,CAF9D;AAGIC,MAAAA,IAAI,EAAE,IAAIJ,IAAJ,CAAS,2BAAT,EAAsCK,OAAtC,EAHV;AAIIC,MAAAA,SAAS,EAAE,GAJf;AAKIC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,OAAO,EAAE,aADb;AAEIC,QAAAA,OAAO,EAAE,aAFb;AAGIC,QAAAA,IAAI,EAAE;AAHV,OADG;AALX,KADM,CADA;AAgBVC,IAAAA,OAAO,EAAE,CACL;AACIC,MAAAA,SAAS,EAAE,GADf;AAEIC,MAAAA,WAAW,EAAE;AAFjB,KADK,CAhBC;AAsBVN,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,OAAO,EAAE,aADb;AAEIC,MAAAA,OAAO,EAAE,aAFb;AAGIK,MAAAA,WAAW,EAAE,CACT;AACIC,QAAAA,SAAS,EAAE,GADf;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADS;AAHjB,KADG;AAtBG;AADa,CAA/B;AAsCA,MAAMC,WAAW,GAAGtB,WAAW,CAAC;AAC5BuB,EAAAA,IAAI,EAAE,OADsB;AAE5BtB,EAAAA,YAF4B;AAG5BuB,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,CAACC,KAAD,EAAkBC,MAAlB,EAAuD;AACvD,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAHuD,CAIvD;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAA,MAAAA,KAAK,CAACxB,YAAN,qBAAyB0B,IAAzB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH,KAXK;;AAYNM,IAAAA,QAAQ,CAACN,KAAD,EAAkBC,MAAlB,EAAmD;AACvD,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;AAEAH,MAAAA,KAAK,mCAAQA,KAAR,GAAkBE,IAAlB,CAAL,CAHuD,CAIvD;AACA;AACH,KAlBK;;AAmBNK,IAAAA,SAAS,CAACP,KAAD,EAAmB;AACxBA,MAAAA,KAAK,GAAGzB,YAAR;AACA6B,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AAtBK;AAHkB,CAAD,CAA/B;AA6BA,OAAO,MAAM;AAAEN,EAAAA,IAAF;AAAQO,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,IAAgCX,WAAW,CAACY,OAAlD;AAEP,eAAeZ,WAAf","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { calendar, pattern, tasks, userTask,userTaskInfo } from \"./userTasksType\";\r\n\r\ntype State = {\r\n    [key: string]: string;\r\n};\r\n\r\nconst initialState: userTask = {\r\n    userTaskInfo: {\r\n        calendar: [\r\n            {\r\n                year: new Date(\"Thu, 01 May 1950 02:00:00\").getFullYear(),\r\n                month: new Date(\"Thu, 01 May 1950 02:00:00\").getMonth() + 1,\r\n                date: new Date(\"Thu, 01 May 1950 02:00:00\").getDate(),\r\n                PatternId: 999,\r\n                tasks: [\r\n                    {\r\n                        detail1: \"testDetail1\",\r\n                        detail2: \"testDetail2\",\r\n                        flug: false,\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        pattern: [\r\n            {\r\n                patternId: 999,\r\n                patternName: \"testPattern1\",\r\n            },\r\n        ],\r\n        tasks: [\r\n            {\r\n                detail1: \"testDetail1\",\r\n                detail2: \"testDetail2\",\r\n                patternInfo: [\r\n                    {\r\n                        patternID: 999,\r\n                        order: 999,\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst tasksModule = createSlice({\r\n    name: \"tasks\",\r\n    initialState,\r\n    reducers: {\r\n        init(state: userTask, action: PayloadAction<userTaskInfo>) {\r\n            const data = action.payload;\r\n            console.log('init data');\r\n            console.log(data);\r\n            // state = {...data};\r\n            console.log('init state 前');\r\n            console.log(state);\r\n            state.userTaskInfo = {...data};\r\n            console.log('init state 後');\r\n            console.log(state);\r\n        },\r\n        Register(state: userTask, action: PayloadAction<userTask>) {\r\n            const data = action.payload;\r\n\r\n            state = { ...state, ...data };\r\n            // console.log('state');\r\n            // console.log(state);\r\n        },\r\n        allDelete(state: userTask,) {\r\n            state = initialState;\r\n            console.log('check allDelete');\r\n        }\r\n    },\r\n});\r\n\r\nexport const { init, Register, allDelete } = tasksModule.actions;\r\n\r\nexport default tasksModule;\r\n"]},"metadata":{},"sourceType":"module"}