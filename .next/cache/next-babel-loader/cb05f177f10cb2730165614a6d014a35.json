{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'; // import styles from 'ScrollableTabsButtonAuto.css'\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"scrollable-auto-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-auto-tab-\".concat(index)\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, __jsx(Typography, null, children)));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: \"scrollable-auto-tab-\".concat(index),\n    'aria-controls': \"scrollable-auto-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    AppBarRoot: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    },\n    tabsBar: {\n      justifyContent: 'center'\n    },\n    tab: {\n      // width: theme.spacing(1),\n      minWidth: theme.spacing(7)\n    }\n  };\n}); // export default function ScrollableTabsButtonAuto(props: {\n//     dataList: {\n//         handleClick: () => void;\n//         date: number;\n//         day: string;\n//     }[]\n// }) {\n\nexport default function ScrollableTabsButtonAuto(props) {\n  var classes = useStyles();\n  var displayRange = 14;\n\n  var _React$useState = React.useState(displayRange - 1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var dataList = [];\n  var dateT = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\n  var date = props.today;\n  date.setDate(props.today.getDate() - displayRange + 1);\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  var handleClick = function handleClick(year, month, date) {\n    return function () {\n      props.setChoiceDate([year, month, date]);\n    };\n  };\n\n  for (var index = displayRange - 1; index >= 0; index--) {\n    var labelText = __jsx(\"span\", null, dateT[date.getDay()], __jsx(\"br\", null), date.getDate());\n\n    dataList.push(__jsx(Tab, {\n      key: date.getFullYear() + \"_\" + date.getMonth() + 1 + \"_\" + date.getDate() // variant=\"square\"\n      ,\n      onClick: handleClick(date.getFullYear(), date.getMonth() + 1, date.getDate()),\n      label: labelText // label={date.getDate()}\n      ,\n      wrapped: true,\n      className: classes.tab\n    }) // </Tab>\n    // ここにタブ表示用の情報をまとめたオブジェクトを作成する。\n    // {\n    //     handleClick: handleClick(date.getFullYear(),date.getMonth() + 1,date.getDate()), date: date.getDate(), day: dateT[date.getDay()]\n    // }\n    );\n    date.setDate(props.today.getDate() + 1);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.AppBarRoot\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\"\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    \"aria-label\": \"scrollable auto tabs example\",\n    className: classes.tabsBar\n  }, dataList.map(function (data) {\n    return data;\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}