{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\pages\\\\DayPlan.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CheckboxList from '../components/view/CheckBoxList';\nimport ResponsiveDrawer from '../components/view/ResponsiveDrawer';\nimport DateList from '../components/view/DateList';\nimport withAuth from '../components/shared/withAuth';\nconst useStyles = makeStyles(theme => createStyles({\n  button: {\n    backgroundColor: \"green\"\n  },\n  checkboxList: {\n    display: 'flex',\n    paddingTop: '30px',\n    paddingLeft: '0px',\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: '240px'\n    }\n  },\n  date: {\n    display: 'flex',\n    paddingTop: '90px',\n    paddingLeft: '0px',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: '240px'\n    }\n  }\n})); // memo\n// DateListには当日分のDate型を渡す。渡した先で繰り返し分を作成し、14日前(getDate()-ｘ)まで計算する。作成時に年、月、日を引数に保管する。クリック時にstateに保管する。\n// CheckboxListには文字列配列を渡す。[年、月、日]。stateで管理しているもの。これを基に表示内容を決定する。万が一に備え、未登録時はエラーにならないようにする。\n\nconst DayPlanPC = () => {\n  const classes = useStyles();\n  const today = new Date();\n  const {\n    0: choiceDate,\n    1: setChoiceDate\n  } = useState([today.getFullYear(), today.getMonth() + 1, today.getDate()]);\n  console.log('today');\n  console.log(today);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(ResponsiveDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), __jsx(Container, {\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(DateList, {\n    today: today,\n    setChoiceDate: setChoiceDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), __jsx(Container, {\n    className: classes.checkboxList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(CheckboxList, {\n    choiceDate: choiceDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default withAuth(DayPlanPC);","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/pages/DayPlan.tsx"],"names":["useState","createStyles","makeStyles","Container","CheckboxList","ResponsiveDrawer","DateList","withAuth","useStyles","theme","button","backgroundColor","checkboxList","display","paddingTop","paddingLeft","breakpoints","up","date","justifyContent","DayPlanPC","classes","today","Date","choiceDate","setChoiceDate","getFullYear","getMonth","getDate","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AAKA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AAIA,OAAOC,QAAP,MAAqB,+BAArB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CACvBO,KAAD,IACIR,YAAY,CACR;AACIS,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb,GADZ;AAIIC,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE,MADC;AAEVC,IAAAA,UAAU,EAAE,MAFF;AAGVC,IAAAA,WAAW,EAAE,KAHH;AAIV,KAACN,KAAK,CAACO,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BF,MAAAA,WAAW,EAAE;AADa;AAJpB,GAJlB;AAYIG,EAAAA,IAAI,EAAE;AACFL,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,UAAU,EAAE,MAFV;AAGFC,IAAAA,WAAW,EAAE,KAHX;AAIFI,IAAAA,cAAc,EAAC,QAJb;AAKF,KAACV,KAAK,CAACO,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BF,MAAAA,WAAW,EAAE;AADa;AAL5B;AAZV,CADQ,CAFQ,CAA5B,C,CA4BA;AACA;AACA;;AACA,MAAMK,SAAS,GAAG,MAAM;AACpB,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BzB,QAAQ,CAAW,CAACsB,KAAK,CAACI,WAAN,EAAD,EAAqBJ,KAAK,CAACK,QAAN,KAAiB,CAAtC,EAAwCL,KAAK,CAACM,OAAN,EAAxC,CAAX,CAA5C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAED,OAAO,CAACH,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEI,KAAjB;AAAwB,IAAA,aAAa,EAAEG,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALJ,EAWI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEJ,OAAO,CAACT,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,UAAU,EAAEY,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXJ,CADJ;AAqBH,CA5BD;;AA8BA,eAAejB,QAAQ,CAACa,SAAD,CAAvB","sourcesContent":["import { useState } from \"react\";\r\n\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport FloatingActionButtonZoom from \"../components/view/FloatingActionButton\";\r\nimport BottomNavigation from '../components/view/BottomNavigation';\r\nimport DenseAppBar from '../components/view/DenseAppBar';\r\nimport CheckboxList from '../components/view/CheckBoxList';\r\nimport ResponsiveDrawer from '../components/view/ResponsiveDrawer';\r\nimport DateList from '../components/view/DateList';\r\n\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nimport withAuth from '../components/shared/withAuth'\r\n\r\nconst useStyles = makeStyles(\r\n    (theme: Theme) =>\r\n        createStyles(\r\n            {\r\n                button: {\r\n                    backgroundColor: \"green\",\r\n                },\r\n                checkboxList: {\r\n                    display: 'flex',\r\n                    paddingTop: '30px',\r\n                    paddingLeft: '0px',\r\n                    [theme.breakpoints.up('sm')]: {\r\n                        paddingLeft: '240px',\r\n                    }\r\n                },\r\n                date: {\r\n                    display: 'flex',\r\n                    paddingTop: '90px',\r\n                    paddingLeft: '0px',\r\n                    justifyContent:'center',\r\n                    [theme.breakpoints.up('sm')]: {\r\n                        paddingLeft: '240px',\r\n                    }\r\n                },\r\n            }\r\n        )\r\n        \r\n);\r\n// memo\r\n// DateListには当日分のDate型を渡す。渡した先で繰り返し分を作成し、14日前(getDate()-ｘ)まで計算する。作成時に年、月、日を引数に保管する。クリック時にstateに保管する。\r\n// CheckboxListには文字列配列を渡す。[年、月、日]。stateで管理しているもの。これを基に表示内容を決定する。万が一に備え、未登録時はエラーにならないようにする。\r\nconst DayPlanPC = () => {\r\n    const classes = useStyles();\r\n    const today = new Date();\r\n    const [choiceDate, setChoiceDate] = useState<number[]>([today.getFullYear(),today.getMonth()+1,today.getDate()]);\r\n    console.log('today');\r\n    console.log(today);\r\n\r\n    return (\r\n        <Container>\r\n            {/* // <Box> */}\r\n            {/* <Box component=\"span\" m={1} className={classes.button}> */}\r\n            <ResponsiveDrawer />\r\n            {/* <DenseAppBar /> */}\r\n            <Container className={classes.date}>\r\n                {/* <CheckBoxOutlineBlankIcon />test\r\n                <br></br>\r\n                <CheckBoxOutlineBlankIcon /> */}\r\n                <DateList today={today} setChoiceDate={setChoiceDate} />\r\n            </Container>\r\n            <Container className={classes.checkboxList}>\r\n                <CheckboxList choiceDate={choiceDate}/>\r\n            </Container>\r\n            {/* <BottomNavigation /> */}\r\n            {/* </Box> */}\r\n            {/* </Box> */}\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default withAuth(DayPlanPC);\r\n"]},"metadata":{},"sourceType":"module"}