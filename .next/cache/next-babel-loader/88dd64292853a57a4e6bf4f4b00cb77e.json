{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\TaskList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport Divider from \"@material-ui/core/Divider\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport TaskModal from \"./TaskModal\";\nimport TaskPlus from \"./taskPlus\";\nimport Menu from \"./Menu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    roots: {\n      width: \"100%\",\n      maxWidth: 720,\n      margin: \"auto\",\n      backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n      display: \"flex\",\n      margin: \"10px auto 5px auto\"\n    },\n    paper: {\n      border: \"1px solid\",\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.paper\n    }\n  });\n});\nexport default function CheckboxList() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState(9999),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(9999),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openMenu = _React$useState4[0],\n      setOpenMune = _React$useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.tasks;\n  }),\n      userTaskInfo = _useSelector.userTaskInfo;\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      anchorEl = _React$useState6[0],\n      setAnchorEl = _React$useState6[1];\n\n  var handleClick = function handleClick(value) {\n    return function () {\n      setAnchorEl(event.currentTarget);\n      setOpenMune(value);\n      console.log(\"openMenu:\" + openMenu);\n    };\n  };\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      setOpen(value);\n      console.log(\"open:\" + open);\n    };\n  };\n\n  var deleteTaskHandler = function deleteTaskHandler(index) {\n    return function () {\n      console.log('check deleteTaskHandler'); // dispatch(taskDelete(index));\n    };\n  };\n\n  return __jsx(List, {\n    className: classes.roots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, userTaskInfo.tasks.map(function (task, index) {\n    var labelId = \"checkbox-list-label-\".concat(task.detail[\"testDetail1\"]);\n    return __jsx(\"div\", {\n      key: labelId + \"_\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, __jsx(ListItem, {\n      key: task.detail[\"title\"] + \":\" + index,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, __jsx(ListItemText, {\n      id: labelId,\n      primary: \"Line item \".concat(index + 1, \" \").concat(task.detail[\"testDetail1\"], \" \").concat(task.detail[\"testDetail2\"]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }), __jsx(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, __jsx(TaskModal, {\n      open: open,\n      setOpen: setOpen,\n      task: task,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, __jsx(CommentIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    })), __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      onClick: handleClick(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, __jsx(RemoveCircleIcon, {\n      color: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    })), __jsx(Menu, {\n      openMenu: openMenu,\n      setOpenMune: setOpenMune,\n      anchorEl: anchorEl,\n      deleteTaskHandler: deleteTaskHandler,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }))), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }));\n  }), __jsx(TaskPlus, {\n    num: userTaskInfo.tasks.length + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(CheckboxList, \"f5+w3yDaDOSh0MKp9q90sDDfsdc=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = CheckboxList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxList\");","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/TaskList.tsx"],"names":["React","createStyles","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","CommentIcon","Divider","RemoveCircleIcon","TaskModal","TaskPlus","Menu","useDispatch","useSelector","useStyles","theme","roots","width","maxWidth","margin","backgroundColor","palette","background","paper","icon","display","border","padding","spacing","CheckboxList","classes","dispatch","useState","open","setOpen","openMenu","setOpenMune","state","tasks","userTaskInfo","anchorEl","setAnchorEl","handleClick","value","event","currentTarget","console","log","handleToggle","deleteTaskHandler","index","map","task","labelId","detail","undefined","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\n\r\nimport TaskModal from \"./TaskModal\";\r\nimport TaskPlus from \"./taskPlus\";\r\nimport Menu from \"./Menu\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { taskDelete } from \"../../modules/tasksModule\";\r\nimport { RootState } from \"../../modules/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        roots: {\r\n            width: \"100%\",\r\n            maxWidth: 720,\r\n            margin: \"auto\",\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        icon: {\r\n            display: \"flex\",\r\n            margin: \"10px auto 5px auto\",\r\n        },\r\n        paper: {\r\n            border: \"1px solid\",\r\n            padding: theme.spacing(1),\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n    })\r\n);\r\n\r\nexport default function CheckboxList() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = React.useState(9999);\r\n    const [openMenu, setOpenMune] = React.useState(9999);\r\n    const { userTaskInfo } = useSelector((state: RootState) => state.tasks);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleClick = (value: number) =>()=> {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpenMune(value);\r\n        console.log(\"openMenu:\" + openMenu);\r\n      };\r\n\r\n    const handleToggle = (value: number) => () => {\r\n        setOpen(value);\r\n        console.log(\"open:\" + open);\r\n    };\r\n\r\n    const deleteTaskHandler = (index: number) => () => {\r\n        console.log('check deleteTaskHandler');\r\n        // dispatch(taskDelete(index));\r\n    };\r\n\r\n    return (\r\n        <List className={classes.roots}>\r\n            {userTaskInfo.tasks.map((task, index) => {\r\n                const labelId = `checkbox-list-label-${task.detail[\"testDetail1\"]}`;\r\n\r\n                return (\r\n                    <div key={labelId + \"_\" + index}>\r\n                        <ListItem\r\n                            key={task.detail[\"title\"] + \":\" + index}\r\n                            role={undefined}\r\n                            dense\r\n                            button\r\n                            onClick={handleToggle(index)}\r\n                        >\r\n                            <ListItemText\r\n                                id={labelId}\r\n                                primary={`Line item ${index + 1} ${\r\n                                    task.detail[\"testDetail1\"]\r\n                                } ${task.detail[\"testDetail2\"]}`}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <TaskModal\r\n                                    open={open}\r\n                                    setOpen={setOpen}\r\n                                    task={task}\r\n                                    index={index}\r\n                                />\r\n                                <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                    <CommentIcon />\r\n                                </IconButton>\r\n                                <IconButton\r\n                                    edge=\"end\"\r\n                                    aria-label=\"comments\"\r\n                                    onClick={handleClick(index)}\r\n                                >\r\n                                    <RemoveCircleIcon color=\"secondary\" />\r\n                                </IconButton>\r\n                                <Menu openMenu={openMenu} setOpenMune={setOpenMune} anchorEl={anchorEl} deleteTaskHandler={deleteTaskHandler} index={index}/>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </div>\r\n                );\r\n            })}\r\n            <TaskPlus num={userTaskInfo.tasks.length + 1} />\r\n        </List>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}