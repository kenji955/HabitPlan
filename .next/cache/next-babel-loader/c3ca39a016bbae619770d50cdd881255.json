{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\taskPlus.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport TaskModal from \"./TaskModal\";\nconst useStyles = makeStyles(theme => createStyles({\n  icon: {\n    display: \"flex\",\n    margin: \"10px auto 5px auto\"\n  }\n}));\n\nconst taskAddHandler = () => {\n  // const currentIndex = checked.indexOf(value);\n  // const newChecked = [...checked];\n  // if (currentIndex === -1) {\n  //     newChecked.push(value);\n  // } else {\n  //     newChecked.splice(currentIndex, 1);\n  // }\n  // setOpen(value);\n  console.log(\"tasktest\"); // setChecked(newChecked);\n};\n\nexport default function TaskPlusIcon(props) {\n  const classes = useStyles();\n  const [newOpen, setNewOpen] = React.useState(9999);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(AddCircleIcon, {\n    className: classes.icon,\n    onClick: taskAddHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(TaskModal, {\n    open: newOpen,\n    setOpen: setNewOpen,\n    index: props.num,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/taskPlus.tsx"],"names":["React","makeStyles","createStyles","AddCircleIcon","TaskModal","useStyles","theme","icon","display","margin","taskAddHandler","console","log","TaskPlusIcon","props","classes","newOpen","setNewOpen","useState","num"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AAGA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,IACzBJ,YAAY,CAAC;AACTK,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,MAAM,EAAE;AAFN;AADG,CAAD,CADY,CAA5B;;AASA,MAAMC,cAAc,GAAG,MAAM;AACzB;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAXyB,CAYzB;AACH,CAbD;;AAeA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA0C;AACrD,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBjB,KAAK,CAACkB,QAAN,CAAe,IAAf,CAA9B;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,SAAS,EAAEH,OAAO,CAACR,IAAlC;AAAwC,IAAA,OAAO,EAAEG,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,SAAD;AACI,IAAA,IAAI,EAAEM,OADV;AAEI,IAAA,OAAO,EAAEC,UAFb;AAGI,IAAA,KAAK,EAAEH,KAAK,CAACK,GAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAUH","sourcesContent":["import React from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport TaskModal from \"./TaskModal\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        icon: {\r\n            display: \"flex\",\r\n            margin: \"10px auto 5px auto\",\r\n        },\r\n    })\r\n);\r\n\r\nconst taskAddHandler = () => {\r\n    // const currentIndex = checked.indexOf(value);\r\n    // const newChecked = [...checked];\r\n\r\n    // if (currentIndex === -1) {\r\n    //     newChecked.push(value);\r\n    // } else {\r\n    //     newChecked.splice(currentIndex, 1);\r\n    // }\r\n\r\n    // setOpen(value);\r\n    console.log(\"tasktest\");\r\n    // setChecked(newChecked);\r\n};\r\n\r\nexport default function TaskPlusIcon(props:{num:number}) {\r\n    const classes = useStyles();\r\n    const [newOpen, setNewOpen] = React.useState(9999);\r\n\r\n    return (\r\n        <div>\r\n            <AddCircleIcon className={classes.icon} onClick={taskAddHandler} />\r\n            <TaskModal\r\n                open={newOpen}\r\n                setOpen={setNewOpen}\r\n                index={props.num}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}