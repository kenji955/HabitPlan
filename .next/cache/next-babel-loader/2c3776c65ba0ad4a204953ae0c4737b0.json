{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { patternDelete, patternNameEdit, patternRegister } from \"../../modules/tasksModule\";\nimport PatternAddMenu from './PatternAddMenu';\nimport PatternDeleteMenu from './PatternDeleteMenu';\nimport PatternEditMenu from './PatternEditMenu';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    home: {\n      width: 'fit-content',\n      margin: 'auto',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    icons: {\n      width: 'fit-content',\n      margin: 'auto',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    icon: {\n      margin: theme.spacing(2)\n    }\n  });\n});\nexport default function SimpleSelect(props) {\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pattern = _React$useState2[0],\n      setPattern = _React$useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.tasks;\n  }),\n      userTaskInfo = _useSelector.userTaskInfo;\n\n  var _React$useState3 = React.useState(9999),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openMenu = _React$useState4[0],\n      setOpenMune = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      anchorEl = _React$useState6[0],\n      setAnchorEl = _React$useState6[1];\n\n  if (props.choice == 0 && userTaskInfo.pattern.length > 0) {\n    props.setChoice(userTaskInfo.pattern[0].patternId);\n    console.log(userTaskInfo.pattern[0].patternId);\n  }\n\n  if (userTaskInfo.pattern.length == 0) {\n    console.log('check length 0');\n    props.setChoice(0);\n  } // props.setChoice(userTaskInfo.pattern[0].patternId);\n\n\n  var handleChange = function handleChange(event) {\n    setPattern(event.target.value);\n    props.setChoice(event.target.value);\n  };\n\n  var handleClick = function handleClick(value) {\n    return function (event) {\n      setAnchorEl(event.currentTarget);\n      setOpenMune(value);\n      console.log(\"openMenu:\" + openMenu);\n    };\n  };\n\n  var patternAddHandler = function patternAddHandler(patternName) {\n    console.log(\"Patterntest patternAddHandler\");\n    dispatch(patternRegister(patternName));\n  };\n\n  var patternDeleteHandler = function patternDeleteHandler(patternName) {\n    // 削除時、未来に登録されているパターンは削除する必要がある\n    console.log(\"Patterntest patternDeleteHandler\");\n    dispatch(patternDelete(props.choice));\n    props.setChoice(0);\n  }; // パターン名称編集用処理。選択されているパターンIDと引数で取得した新しい名称をReduxActionへ連携する。\n\n\n  var patternEditHandler = function patternEditHandler(patternName) {\n    console.log(\"Patterntest patternEditHandler\");\n    var editPatternId = props.choice;\n    dispatch(patternNameEdit({\n      editPatternId: editPatternId,\n      patternName: patternName\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.home\n  }, __jsx(FormControl, {\n    className: classes.formControl\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-label\"\n  }, \"Pattern\"), __jsx(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: props.choice,\n    onChange: handleChange\n  }, userTaskInfo.pattern.map(function (pattern, index) {\n    return __jsx(MenuItem, {\n      key: index + \"_\" + pattern.patternName,\n      value: pattern.patternId\n    }, pattern.patternName);\n  }))), __jsx(\"div\", {\n    className: classes.icons\n  }, __jsx(IconButton, {\n    edge: \"end\",\n    size: \"small\",\n    \"aria-label\": \"comments\",\n    onClick: handleClick(1)\n  }, __jsx(AddCircleIcon, {\n    color: \"primary\",\n    className: classes.icon\n  })), __jsx(PatternAddMenu, {\n    openMenu: openMenu,\n    setOpenMune: setOpenMune,\n    anchorEl: anchorEl,\n    Handler: patternAddHandler,\n    index: 1\n  }), __jsx(IconButton, {\n    edge: \"end\",\n    size: \"small\",\n    \"aria-label\": \"comments\",\n    onClick: handleClick(2)\n  }, __jsx(RemoveCircleIcon, {\n    color: \"secondary\",\n    className: classes.icon\n  })), __jsx(PatternDeleteMenu, {\n    openMenu: openMenu,\n    setOpenMune: setOpenMune,\n    anchorEl: anchorEl,\n    Handler: patternDeleteHandler,\n    index: 2\n  }), __jsx(IconButton, {\n    edge: \"end\",\n    size: \"small\",\n    \"aria-label\": \"comments\",\n    onClick: handleClick(3)\n  }, __jsx(EditIcon, {\n    className: classes.icon\n  })), __jsx(PatternEditMenu, {\n    openMenu: openMenu,\n    setOpenMune: setOpenMune,\n    anchorEl: anchorEl,\n    Handler: patternEditHandler,\n    index: 3\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}