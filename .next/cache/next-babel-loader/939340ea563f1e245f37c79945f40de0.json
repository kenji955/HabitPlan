{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CheckboxList from '../components/view/CheckBoxList';\nimport ResponsiveDrawer from '../components/view/ResponsiveDrawer';\nimport ScrollableTabsButtonAuto from '../components/view/ScrollableTabsButtonAuto';\nimport withAuth from '../components/shared/withAuth';\nconst useStyles = makeStyles(theme => createStyles({\n  button: {\n    backgroundColor: \"green\"\n  },\n  checkboxList: {\n    display: 'flex',\n    paddingTop: '30px',\n    paddingLeft: '0px',\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: '240px'\n    }\n  },\n  date: {\n    display: 'flex',\n    paddingTop: '90px',\n    paddingLeft: '0px',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(131),\n      paddingLeft: '240px'\n    }\n  }\n})); // memo\n// DateListには当日分のDate型を渡す。渡した先で繰り返し分を作成し、14日前(getDate()-ｘ)まで計算する。作成時に年、月、日を引数に保管する。クリック時にstateに保管する。\n// CheckboxListには文字列配列を渡す。[年、月、日]。stateで管理しているもの。これを基に表示内容を決定する。万が一に備え、未登録時はエラーにならないようにする。\n\nconst DayPlan = () => {\n  const classes = useStyles();\n  const today = new Date();\n  const {\n    0: choiceDate,\n    1: setChoiceDate\n  } = useState([today.getFullYear(), today.getMonth() + 1, today.getDate()]);\n  console.log('today');\n  console.log(today);\n  return __jsx(Container, null, __jsx(ResponsiveDrawer, null), __jsx(Container, {\n    className: classes.date\n  }, __jsx(ScrollableTabsButtonAuto, {\n    today: today,\n    setChoiceDate: setChoiceDate\n  })), __jsx(Container, {\n    className: classes.checkboxList\n  }, __jsx(CheckboxList, {\n    choiceDate: choiceDate\n  })));\n};\n\nexport default withAuth(DayPlan, 'DayPlan');","map":null,"metadata":{},"sourceType":"module"}