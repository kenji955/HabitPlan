{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\PatternList.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { taskRemovePattern } from \"../../modules/tasksModule\";\nconst useStyles = makeStyles(theme => createStyles({\n  roots: {\n    width: \"100%\",\n    maxWidth: 720,\n    margin: \"auto\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function PatternList(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    userTaskInfo\n  } = useSelector(state => state.tasks); // マイナスボタンがクリックされたらパターンから対象のタスクを除外する。\n\n  const patternRemoveHandler = detailTitle => () => {\n    const patternId = props.choice;\n    dispatch(taskRemovePattern({\n      patternId,\n      detailTitle\n    }));\n  }; // 選択したパターンIDが設定されているタスクを抽出する。\n\n\n  const choicePatternTasks = userTaskInfo.tasks.filter(function (task) {\n    return task.patternInfo.some(task => task.patternID == props.choice);\n  });\n  return __jsx(List, {\n    className: classes.roots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, choicePatternTasks.map((task, index) => {\n    const taskPattern = task.patternInfo.filter(function (patternInfo) {\n      return patternInfo.patternID == props.choice;\n    });\n    const labelId = `checkbox-list-label-${taskPattern[0].patternID + taskPattern[0].order}`;\n    return __jsx(\"div\", {\n      key: taskPattern[0].patternID + '_' + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, __jsx(ListItem, {\n      key: taskPattern[0].patternID + taskPattern[0].order,\n      role: undefined,\n      dense: true,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, __jsx(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      onClick: patternRemoveHandler(task.detail['title']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, __jsx(RemoveCircleIcon, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    }))), __jsx(ListItemText, {\n      id: labelId,\n      primary: `Line item ${taskPattern[0].patternID + \"_\" + taskPattern[0].order} ${task.detail[\"testDetail1\"]} ${task.detail[\"testDetail2\"]}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }), __jsx(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, __jsx(CommentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    })))), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }));\n  }));\n}","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/PatternList.tsx"],"names":["React","createStyles","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","IconButton","CommentIcon","RemoveCircleIcon","useDispatch","useSelector","Divider","taskRemovePattern","useStyles","theme","roots","width","maxWidth","margin","backgroundColor","palette","background","paper","PatternList","props","classes","dispatch","userTaskInfo","state","tasks","patternRemoveHandler","detailTitle","patternId","choice","choicePatternTasks","filter","task","patternInfo","some","patternID","map","index","taskPattern","labelId","order","undefined","detail"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../modules/rootReducer\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { taskRemovePattern } from \"../../modules/tasksModule\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        roots: {\r\n            width: \"100%\",\r\n            maxWidth: 720,\r\n\r\n            margin: \"auto\",\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n    })\r\n);\r\n\r\nexport default function PatternList(props: { choice: number }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { userTaskInfo } = useSelector((state: RootState) => state.tasks);\r\n\r\n    // マイナスボタンがクリックされたらパターンから対象のタスクを除外する。\r\n    const patternRemoveHandler = (detailTitle:string)=>()=>{\r\n        const patternId =props.choice;\r\n        dispatch(taskRemovePattern({patternId,detailTitle}));\r\n    }\r\n\r\n    // 選択したパターンIDが設定されているタスクを抽出する。\r\n    const choicePatternTasks = userTaskInfo.tasks.filter(function (task) {\r\n        return task.patternInfo.some((task) => task.patternID == props.choice);\r\n    });\r\n\r\n    return (\r\n        <List className={classes.roots}>\r\n            {choicePatternTasks.map((task,index) => {\r\n                const taskPattern = task.patternInfo.filter(function (\r\n                    patternInfo\r\n                ) {\r\n                    return patternInfo.patternID == props.choice;\r\n                });\r\n                const labelId = `checkbox-list-label-${\r\n                    taskPattern[0].patternID + taskPattern[0].order\r\n                }`;\r\n\r\n                return (\r\n                    <div key={\r\n                        taskPattern[0].patternID + '_' + index\r\n                    }>\r\n                        <ListItem\r\n                            key={\r\n                                taskPattern[0].patternID + taskPattern[0].order\r\n                            }\r\n                            role={undefined}\r\n                            dense\r\n                            button\r\n                        >\r\n                            <ListItemIcon>\r\n                                <IconButton edge=\"end\" aria-label=\"comments\" onClick={patternRemoveHandler(task.detail['title'])}>\r\n                                    <RemoveCircleIcon color=\"secondary\" />\r\n                                </IconButton>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                id={labelId}\r\n                                primary={`Line item ${\r\n                                    taskPattern[0].patternID +\r\n                                    \"_\" +\r\n                                    taskPattern[0].order\r\n                                } ${task.detail[\"testDetail1\"]} ${\r\n                                    task.detail[\"testDetail2\"]\r\n                                }`}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                    {/* <IconButton aria-label=\"comments\"> */}\r\n                                    <CommentIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </div>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}