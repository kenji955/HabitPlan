{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\pages\\\\tasks.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport ResponsiveDrawer from \"../components/view/ResponsiveDrawer\";\nimport FloatingActionButton from \"../components/view//FloatingActionButton\";\nimport ListComponent from \"../components/test/firebaseTest/getData\";\nimport FormComponent from \"../components/test/firebaseTest/FormComponent\";\nimport FirebaseAuthComponent from \"../components/test/firebaseTest/FirebaseAuthComponent\";\nimport { useSelector } from \"react-redux\";\nimport { useFirebaseConnect, isLoaded, isEmpty, getFirebase } from \"react-redux-firebase\";\nimport withAuth from \"../components/shared/withAuth\";\nconst useStyles = makeStyles(theme => createStyles({\n  button: {\n    backgroundColor: \"green\"\n  },\n  taskList: {\n    display: \"flex\",\n    paddingTop: \"90px\",\n    paddingLeft: \"0px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: \"240px\"\n    }\n  }\n}));\n\nconst Tasks = () => {\n  const classes = useStyles(); // Firebase接続テストここから＝＝＝＝＝＝＝\n\n  console.log(\"Firebase接続テストここから＝＝＝＝＝＝＝\");\n  const {\n    userId\n  } = useSelector(state => state.user);\n  console.log(\"users/\" + userId);\n  useFirebaseConnect([{\n    path: `users/${userId}`\n  } //\"users/\" + userId { path: '/todos' } // object notation\n  ]);\n  console.log(\"state.firebase.data.users[userId]\");\n  const todos = useSelector(state => state.firebase.data.users[userId].calendar);\n  console.log(todos);\n  let testContent;\n\n  if (!isLoaded(todos)) {\n    testContent = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }\n    }, \"Loading...\");\n  }\n\n  if (isEmpty(todos)) {\n    testContent = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, \"Todos List Is Empty\");\n  }\n\n  const firebase = getFirebase();\n  console.log('====test====');\n  console.log(firebase.database); // Firebase接続テストここまで＝＝＝＝＝＝＝\n\n  console.log(\"Firebase接続テストここまで＝＝＝＝＝＝＝\");\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(ResponsiveDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), __jsx(Container, {\n    className: classes.taskList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(FloatingActionButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), __jsx(Container, {\n    className: classes.taskList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, testContent, __jsx(FirebaseAuthComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), __jsx(ListComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), __jsx(FormComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default withAuth(Tasks);","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/pages/tasks.tsx"],"names":["createStyles","makeStyles","Container","ResponsiveDrawer","FloatingActionButton","ListComponent","FormComponent","FirebaseAuthComponent","useSelector","useFirebaseConnect","isLoaded","isEmpty","getFirebase","withAuth","useStyles","theme","button","backgroundColor","taskList","display","paddingTop","paddingLeft","breakpoints","up","Tasks","classes","console","log","userId","state","user","path","todos","firebase","data","users","calendar","testContent","database"],"mappings":"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","sourcesContent":["import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport TaskList from \"../components/view/TaskList\";\r\nimport ResponsiveDrawer from \"../components/view/ResponsiveDrawer\";\r\nimport FloatingActionButton from \"../components/view//FloatingActionButton\";\r\n\r\nimport ListComponent from \"../components/test/firebaseTest/getData\";\r\nimport FormComponent from \"../components/test/firebaseTest/FormComponent\";\r\nimport FirebaseAuthComponent from \"../components/test/firebaseTest/FirebaseAuthComponent\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirebaseConnect, isLoaded, isEmpty, getFirebase } from \"react-redux-firebase\";\r\n\r\nimport withAuth from \"../components/shared/withAuth\";\r\nimport { RootState } from \"../modules/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            backgroundColor: \"green\",\r\n        },\r\n        taskList: {\r\n            display: \"flex\",\r\n            paddingTop: \"90px\",\r\n            paddingLeft: \"0px\",\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                paddingLeft: \"240px\",\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\nconst Tasks = () => {\r\n    const classes = useStyles();\r\n\r\n    // Firebase接続テストここから＝＝＝＝＝＝＝\r\n    console.log(\"Firebase接続テストここから＝＝＝＝＝＝＝\");\r\n    const { userId } = useSelector((state: RootState) => state.user);\r\n\r\n    console.log(\"users/\" + userId);\r\n    useFirebaseConnect([\r\n        { path: `users/${userId}` },\r\n        //\"users/\" + userId { path: '/todos' } // object notation\r\n    ]);\r\n    \r\n    console.log(\"state.firebase.data.users[userId]\");\r\n    const todos = useSelector((state: RootState) => state.firebase.data.users[userId].calendar);\r\n    console.log(todos);\r\n    let testContent;\r\n    if (!isLoaded(todos)) {\r\n        testContent = <div>Loading...</div>;\r\n    }\r\n\r\n    if (isEmpty(todos)) {\r\n        testContent = <div>Todos List Is Empty</div>;\r\n    }\r\n\r\n    const firebase = getFirebase();\r\n    console.log('====test====');\r\n    console.log(firebase.database);\r\n\r\n    // Firebase接続テストここまで＝＝＝＝＝＝＝\r\n    console.log(\"Firebase接続テストここまで＝＝＝＝＝＝＝\");\r\n\r\n    return (\r\n        <Container>\r\n            {/* // <Box> */}\r\n            {/* <Box component=\"span\" m={1} className={classes.button}> */}\r\n            <ResponsiveDrawer />\r\n            {/* <DenseAppBar /> */}\r\n            <Container className={classes.taskList}>\r\n                <FloatingActionButton />\r\n                {/* <TaskList /> */}\r\n            </Container>\r\n            {/* <Tooltip /> */}\r\n            {/* <Tooltips onClick={}/> */}\r\n            {/* <BottomNavigation /> */}\r\n            {/* </Box> */}\r\n            {/* </Box> */}\r\n            <Container className={classes.taskList}>\r\n                {testContent}\r\n                <FirebaseAuthComponent />\r\n                <ListComponent />\r\n                <FormComponent />\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default withAuth(Tasks);\r\n"]},"metadata":{},"sourceType":"module"}