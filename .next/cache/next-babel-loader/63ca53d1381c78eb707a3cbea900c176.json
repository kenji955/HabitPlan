{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\InputNormal.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { taskDetailRegister } from \"../../modules/tasksModule\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"25ch\"\n      }\n    }\n  });\n});\nexport default function FormPropsTextFields(props) {\n  _s();\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.tasks;\n  }),\n      userTaskInfo = _useSelector.userTaskInfo;\n\n  var onChangeHandler = function onChangeHandler(event) {\n    console.log(event.target.value); // ここでevent.target.valueとラベル(連想配列のキー)を送って処理する。処理も未作成\n\n    dispatch(taskDetailRegister([event.target.value, props.label, props.index]));\n  }; // const check = userTaskInfo.tasks[parseInt(props.index)].detail;\n  // const check = userTaskInfo.tasks[parseInt(props.index)].detail[props.label]\n  // 新規登録か更新かをチェックする。新規であればTrue\n\n\n  var checkNew = userTaskInfo.tasks.length < parseInt(props.index);\n  console.log('inputNormal check ' + props.label);\n  console.log(checkNew);\n\n  if (checkNew) {\n    console.log('newTasks');\n\n    if (props.newTasks) {\n      console.log('y');\n    } else {\n      console.log('n');\n    }\n\n    console.log(props.newTasks);\n    props.newTasks.detail = _objectSpread(_objectSpread({}, props.newTasks.detail), {}, _defineProperty({}, props.label, ''));\n    return (// <form className={classes.root} noValidate autoComplete=\"off\">\n      __jsx(TextField, {\n        required: true,\n        id: \"standard-basic\",\n        label: props.label,\n        onChange: onChangeHandler,\n        value: props.newTasks.detail[props.label],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }) // </form>\n\n    );\n  } else if (props.required) {\n    return (// <form className={classes.root} noValidate autoComplete=\"off\">\n      __jsx(TextField, {\n        required: true,\n        id: \"standard-basic\",\n        label: props.label,\n        onChange: onChangeHandler,\n        value: userTaskInfo.tasks[parseInt(props.index)].detail[props.label],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }) // </form>\n\n    );\n  }\n\n  return (// <form className={classes.root} noValidate autoComplete=\"off\">\n    __jsx(TextField, {\n      id: \"standard-basic\",\n      label: props.label,\n      onChange: onChangeHandler,\n      value: userTaskInfo.tasks[parseInt(props.index)].detail[props.label],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }) // </form>\n\n  );\n}\n\n_s(FormPropsTextFields, \"D0QvzFYO60X7H5R5opj3sOfH4UU=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = FormPropsTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPropsTextFields\");","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/InputNormal.tsx"],"names":["React","TextField","createStyles","makeStyles","useDispatch","useSelector","taskDetailRegister","useStyles","theme","root","margin","spacing","width","FormPropsTextFields","props","classes","dispatch","state","tasks","userTaskInfo","onChangeHandler","event","console","log","target","value","label","index","checkNew","length","parseInt","newTasks","detail","required"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../modules/rootReducer\";\r\nimport { taskDetailRegister } from \"../../modules/tasksModule\";\r\nimport { tasks } from \"../../modules/userTasksType\";\r\n\r\ninterface props {\r\n    label: string;\r\n    required: boolean;\r\n    index:string;\r\n    newTasks:tasks;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            \"& .MuiTextField-root\": {\r\n                margin: theme.spacing(1),\r\n                width: \"25ch\",\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\nexport default function FormPropsTextFields(props: props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { userTaskInfo } = useSelector((state: RootState) => state.tasks);\r\n    const onChangeHandler = (event: any) => {\r\n        console.log(event.target.value);\r\n        // ここでevent.target.valueとラベル(連想配列のキー)を送って処理する。処理も未作成\r\n        dispatch(taskDetailRegister([event.target.value,props.label,props.index]));\r\n    };\r\n\r\n    // const check = userTaskInfo.tasks[parseInt(props.index)].detail;\r\n    // const check = userTaskInfo.tasks[parseInt(props.index)].detail[props.label]\r\n    // 新規登録か更新かをチェックする。新規であればTrue\r\n    const checkNew = userTaskInfo.tasks.length < parseInt(props.index)\r\n    console.log('inputNormal check '+props.label);\r\n    console.log(checkNew);\r\n    \r\n    if(checkNew){\r\n        console.log('newTasks');\r\n        if(props.newTasks){\r\n            console.log('y');\r\n        }else{\r\n            console.log('n');\r\n\r\n        }\r\n        console.log(props.newTasks);\r\n        props.newTasks.detail = {...props.newTasks.detail,[props.label]:''};\r\n        return (\r\n            // <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label={props.label}\r\n                onChange={onChangeHandler}\r\n                value={props.newTasks.detail[props.label]}\r\n            />\r\n            // </form>\r\n        );\r\n    }else if (props.required) {\r\n        return (\r\n            // <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n                required\r\n                id=\"standard-basic\"\r\n                label={props.label}\r\n                onChange={onChangeHandler}\r\n                value={userTaskInfo.tasks[parseInt(props.index)].detail[props.label]}\r\n            />\r\n            // </form>\r\n        );\r\n    }\r\n    return (\r\n        // <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField\r\n            id=\"standard-basic\"\r\n            label={props.label}\r\n            onChange={onChangeHandler}\r\n            value={userTaskInfo.tasks[parseInt(props.index)].detail[props.label]}\r\n        />\r\n        // </form>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}