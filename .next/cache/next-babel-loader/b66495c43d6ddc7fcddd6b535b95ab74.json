{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\test\\\\firebaseTest\\\\getData.tsx\";\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport { useFetchAllData } from './DBFetch';\n// 認証周りやDB周りで必要なためimportしておく\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport { useSelector } from \"react-redux\";\nexport default function ListComponent() {\n  const {\n    tasks\n  } = useSelector(state => state); // dataを取ってくる\n\n  const {\n    data\n  } = useFetchAllData(); // object形式なので使いやすいように{key, value}形式のリストに変換する\n  // また、データが変わらない限り結果は同じなのでメモ化しておく\n\n  const dataList = useMemo(() => Object.entries(tasks || {}).map(([key, value]) => ({\n    key,\n    value\n  })), [tasks]);\n  return __jsx(\"dl\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, dataList.map(({\n    key,\n    value\n  }) => __jsx(React.Fragment, {\n    key: `${key}${value}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"dt\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"key: \", key), __jsx(\"dt\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"value: \", value))));\n}\n;","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/test/firebaseTest/getData.tsx"],"names":["React","useMemo","useFetchAllData","useSelector","ListComponent","tasks","state","data","dataList","Object","entries","map","key","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,WAAW,CAAEG,KAAD,IAAsBA,KAAvB,CAA7B,CADsC,CAEpC;;AACF,QAAM;AAAEC,IAAAA;AAAF,MAAWL,eAAe,EAAhC,CAHsC,CAIpC;AACA;;AACF,QAAMM,QAAQ,GAAGP,OAAO,CAAC,MAAMQ,MAAM,CAACC,OAAP,CAAeL,KAAK,IAAI,EAAxB,EAA4BM,GAA5B,CAAgC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,MAAmB;AAAED,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAnB,CAAhC,CAAP,EAA4E,CAACR,KAAD,CAA5E,CAAxB;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,QAAQ,CAACG,GAAT,CAAa,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KACvB,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAG,GAAED,GAAI,GAAEC,KAAM,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUD,GAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYC,KAAZ,CAFF,CADU,CAAL,CAAP;AAMD;AAAA","sourcesContent":["import React, { useMemo } from 'react';\r\nimport { useFetchAllData } from './DBFetch';\r\nimport firebase from \"firebase/app\";\r\n// 認証周りやDB周りで必要なためimportしておく\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport { RootState } from '../../../modules/rootReducer';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function ListComponent() {\r\n  const { tasks } = useSelector((state: RootState) => state)\r\n    // dataを取ってくる\r\n  const { data } = useFetchAllData();\r\n    // object形式なので使いやすいように{key, value}形式のリストに変換する\r\n    // また、データが変わらない限り結果は同じなのでメモ化しておく\r\n  const dataList = useMemo(() => Object.entries(tasks || {}).map(([key, value]) => ({ key, value })), [tasks]);\r\n\r\n  return <dl>{dataList.map(({ key, value }) =>\r\n    <React.Fragment key={`${key}${value}`}>\r\n      <dt>key: {key}</dt>\r\n      <dt>value: {value}</dt>\r\n    </React.Fragment>\r\n  )}</dl>\r\n};"]},"metadata":{},"sourceType":"module"}