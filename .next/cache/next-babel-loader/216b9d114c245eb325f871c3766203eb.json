{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\DateList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from '@material-ui/core/Avatar';\nimport { green } from '@material-ui/core/colors';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1)\n      }\n    },\n    square: {\n      // color: theme.palette.getContrastText(deepOrange[500]),\n      // backgroundColor: deepOrange[500],\n      display: 'inline-flex',\n      margin: '0 3px',\n      textAlign: 'center' // width:'100px',\n\n    },\n    rounded: {\n      color: '#fff',\n      backgroundColor: green[500]\n    }\n  });\n}); // export default function DateList(props: { choice: number, setChoice: React.Dispatch<React.SetStateAction<number>> }) {\n\nexport default function DateList(props) {\n  _s();\n\n  var classes = useStyles();\n  var displayRange = 14;\n  var dataList = [];\n  var dateT = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\n  var date = props.today;\n  date.setDate(props.today.getDate() - displayRange + 1);\n\n  var handleClick = function handleClick(year, month, date) {\n    return function () {\n      props.setChoiceDate([year, month, date]);\n    };\n  };\n\n  for (var index = displayRange - 1; index >= 0; index--) {\n    console.log(index + 1);\n    console.log(date);\n    dataList.push(__jsx(Avatar, {\n      variant: \"square\",\n      className: classes.square,\n      onClick: handleClick(date.getFullYear(), date.getMonth() + 1, date.getDate()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }, dateT[date.getDay()], __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), date.getDate()));\n    date.setDate(props.today.getDate() + 1);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, dataList.map(function (data, index) {\n    return data;\n  })) // <div className={classes.home}>\n  //     <FormControl className={classes.formControl}>\n  //         <InputLabel id=\"demo-simple-select-label\">Pattern</InputLabel>\n  //         {/* valueには選択している項目のvalueが設定される */}\n  //         <Select\n  //             labelId=\"demo-simple-select-label\"\n  //             id=\"demo-simple-select\"\n  //             value={props.choice}\n  //             onChange={handleChange}\n  //         >\n  //             {userTaskInfo.pattern.map((pattern)=>{\n  //                 return <MenuItem value={pattern.patternId}>{pattern.patternName}</MenuItem>\n  //             })}\n  //         </Select>\n  //     </FormControl>\n  // </div>\n  // {dataList}\n  // <Avatar variant=\"square\" className={classes.square}>\n  //     N\n  // </Avatar>\n  ;\n}\n\n_s(DateList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DateList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateList\");","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/DateList.tsx"],"names":["React","createStyles","makeStyles","Avatar","green","useStyles","theme","root","display","margin","spacing","square","textAlign","rounded","color","backgroundColor","DateList","props","classes","displayRange","dataList","dateT","date","today","setDate","getDate","handleClick","year","month","setChoiceDate","index","console","log","push","getFullYear","getMonth","getDay","map","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, green } from '@material-ui/core/colors';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../modules/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        square: {\r\n            // color: theme.palette.getContrastText(deepOrange[500]),\r\n            // backgroundColor: deepOrange[500],\r\n            display: 'inline-flex',\r\n            margin:'0 3px',\r\n            textAlign:'center',\r\n            // width:'100px',\r\n        },\r\n        rounded: {\r\n            color: '#fff',\r\n            backgroundColor: green[500],\r\n        },\r\n    }),\r\n)\r\n\r\n// export default function DateList(props: { choice: number, setChoice: React.Dispatch<React.SetStateAction<number>> }) {\r\nexport default function DateList(props: { today: Date, setChoiceDate: React.Dispatch<React.SetStateAction<number[]>> }) {\r\n    const classes = useStyles();\r\n    const displayRange: number = 14;\r\n    const dataList = [];\r\n    const dateT = [\"日\",\"月\",\"火\",\"水\",\"木\",\"金\",\"土\"];\r\n    const date = props.today;\r\n    date.setDate(props.today.getDate() - displayRange+1);\r\n\r\n\r\n    const handleClick = (year: number,month: number,date: number) => () => {\r\n        props.setChoiceDate([year,month,date]);\r\n    };\r\n\r\n\r\n    for (let index: number = displayRange-1; index >= 0; index--) {\r\n        console.log(index+1);\r\n        console.log(date);\r\n        \r\n        dataList.push(<Avatar variant=\"square\" className={classes.square} onClick={handleClick(date.getFullYear(),date.getMonth()+1,date.getDate())}>\r\n            {/* {index+1} */}\r\n            {dateT[date.getDay()]}\r\n            <br></br>\r\n            {/* {date.getFullYear()}/\r\n            {date.getMonth()+1}/ */}\r\n            {date.getDate()}\r\n        </Avatar>)\r\n        date.setDate(props.today.getDate() + 1);\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            {dataList.map((data, index) => {\r\n                return data;\r\n            })}\r\n        </div>\r\n        // <div className={classes.home}>\r\n        //     <FormControl className={classes.formControl}>\r\n        //         <InputLabel id=\"demo-simple-select-label\">Pattern</InputLabel>\r\n        //         {/* valueには選択している項目のvalueが設定される */}\r\n        //         <Select\r\n        //             labelId=\"demo-simple-select-label\"\r\n        //             id=\"demo-simple-select\"\r\n        //             value={props.choice}\r\n        //             onChange={handleChange}\r\n        //         >\r\n        //             {userTaskInfo.pattern.map((pattern)=>{\r\n        //                 return <MenuItem value={pattern.patternId}>{pattern.patternName}</MenuItem>\r\n        //             })}\r\n        //         </Select>\r\n        //     </FormControl>\r\n        // </div>\r\n        // {dataList}\r\n        // <Avatar variant=\"square\" className={classes.square}>\r\n        //     N\r\n        // </Avatar>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}