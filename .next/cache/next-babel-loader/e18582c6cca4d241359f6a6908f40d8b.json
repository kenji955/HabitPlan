{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiTextField from '@material-ui/core/TextField';\nimport { capitalize } from '@material-ui/core/utils';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      padding: 0,\n      'label + &': {\n        marginTop: theme.spacing(3)\n      }\n    },\n    input: {\n      minWidth: theme.spacing(6),\n      backgroundColor: theme.palette.common.white,\n      '&$disabled': {\n        backgroundColor: theme.palette.divider\n      }\n    },\n    inputBorder: {\n      border: '1px solid #e9ddd0',\n      '&:focus': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n    disabled: {},\n    inputSizeSmall: {\n      fontSize: 14,\n      padding: theme.spacing(1),\n      width: \"calc(100% - \".concat(theme.spacing(2), \"px)\")\n    },\n    inputSizeMedium: {\n      fontSize: 16,\n      padding: theme.spacing(2),\n      width: \"calc(100% - \".concat(theme.spacing(4), \"px)\")\n    },\n    inputSizeLarge: {\n      fontSize: 18,\n      padding: 22,\n      width: \"calc(100% - \".concat(22 * 2, \"px)\")\n    },\n    inputSizeXlarge: {\n      fontSize: 20,\n      padding: 25,\n      width: \"calc(100% - \".concat(25 * 2, \"px)\")\n    },\n    formLabel: {\n      fontSize: 18\n    },\n    select: {\n      height: 'auto',\n      borderRadius: 0\n    },\n    selectIcon: {\n      top: '50%',\n      marginTop: -12\n    }\n  };\n};\n\nfunction TextField(props) {\n  var classes = props.classes,\n      _props$InputProps = props.InputProps,\n      InputProps = _props$InputProps === void 0 ? {} : _props$InputProps,\n      InputLabelProps = props.InputLabelProps,\n      _props$noBorder = props.noBorder,\n      noBorder = _props$noBorder === void 0 ? false : _props$noBorder,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      SelectProps = props.SelectProps,\n      other = _objectWithoutProperties(props, [\"classes\", \"InputProps\", \"InputLabelProps\", \"noBorder\", \"size\", \"SelectProps\"]);\n\n  var _InputProps$classes = InputProps.classes;\n  _InputProps$classes = _InputProps$classes === void 0 ? {} : _InputProps$classes;\n\n  var InputPropsClassesInput = _InputProps$classes.input,\n      InputPropsClassesOther = _objectWithoutProperties(_InputProps$classes, [\"input\"]),\n      InputPropsOther = _objectWithoutProperties(InputProps, [\"classes\"]);\n\n  return __jsx(MuiTextField, _extends({\n    InputProps: _objectSpread({\n      disableUnderline: true,\n      classes: _objectSpread({\n        root: classes.root,\n        input: clsx(classes.input, classes[\"inputSize\".concat(capitalize(size))], _defineProperty({}, classes.inputBorder, !noBorder), InputPropsClassesInput),\n        disabled: classes.disabled\n      }, InputPropsClassesOther)\n    }, InputPropsOther),\n    InputLabelProps: _objectSpread(_objectSpread({}, InputLabelProps), {}, {\n      shrink: true,\n      className: classes.formLabel\n    }),\n    SelectProps: _objectSpread(_objectSpread({}, SelectProps), {}, {\n      classes: {\n        select: classes.select,\n        icon: classes.selectIcon\n      }\n    })\n  }, other));\n}\n\nexport default withStyles(styles)(TextField);","map":null,"metadata":{},"sourceType":"module"}