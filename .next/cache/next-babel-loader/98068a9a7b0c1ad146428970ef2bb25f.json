{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { taskPatternUpdate } from \"../../modules/tasksModule\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function PatternSwitchList(props) {\n  const classes = useStyles();\n  const {\n    userTaskInfo\n  } = useSelector(state => state.tasks);\n  const dispatch = useDispatch(); // ここでパターンの登録状況を更新する\n\n  const handleToggle = value => () => {\n    const currentIndex = props.checked.indexOf(value);\n    const newChecked = [...props.checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    props.setChecked(newChecked);\n    console.log('newChecked');\n    console.log(newChecked);\n    const index = props.index;\n    dispatch(taskPatternUpdate({\n      newChecked,\n      index\n    }));\n  };\n\n  return __jsx(List, {\n    subheader: __jsx(ListSubheader, null, \"PatternList\"),\n    className: classes.root\n  }, userTaskInfo.pattern.map(content => {\n    return __jsx(ListItem, null, __jsx(ListItemText, {\n      id: content.patternId + \"_\" + content.patternName,\n      primary: content.patternName\n    }), __jsx(ListItemSecondaryAction, null, __jsx(Switch, {\n      edge: \"end\",\n      onChange: handleToggle(content.patternId),\n      checked: props.checked.indexOf(content.patternId) !== -1,\n      inputProps: {\n        \"aria-labelledby\": content.patternId + \"_\" + content.patternName\n      }\n    })));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}