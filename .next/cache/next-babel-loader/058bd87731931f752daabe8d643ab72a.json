{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText'; // import Link from '@material-ui/core/Link';\n\nimport Link from 'next/link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport ListIcon from '@material-ui/icons/List';\nimport TuneIcon from '@material-ui/icons/Tune';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme, createStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => createStyles({\n  rootd: {\n    display: 'inline-block'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function ResponsiveDrawer(props) {\n  const {\n    window\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.toolbar\n  }), __jsx(Divider, null), __jsx(List, null, __jsx(Link, {\n    href: \"/DayPlan\"\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"Day Plan\"\n  }, __jsx(ListItemIcon, null, __jsx(DirectionsRunIcon, null)), __jsx(ListItemText, {\n    primary: \"Day Plan\"\n  }))), __jsx(Link, {\n    href: \"/tasks\"\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"Tasks\"\n  }, __jsx(ListItemIcon, null, __jsx(ListIcon, null)), __jsx(ListItemText, {\n    primary: \"Tasks\"\n  }))), __jsx(Link, {\n    href: \"/Pattern\"\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"Pattern\"\n  }, __jsx(ListItemIcon, null, __jsx(TuneIcon, null)), __jsx(ListItemText, {\n    primary: \"Pattern\"\n  }))), __jsx(ListItem, {\n    button: true,\n    key: \"Calendar\"\n  }, __jsx(ListItemIcon, null, __jsx(DateRangeIcon, null)), __jsx(ListItemText, {\n    primary: \"Calendar\"\n  }))), __jsx(Divider, null));\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n  return __jsx(\"div\", {\n    className: classes.rootd\n  }, __jsx(CssBaseline, null), __jsx(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    edge: \"start\",\n    onClick: handleDrawerToggle,\n    className: classes.menuButton\n  }, __jsx(MenuIcon, null)), __jsx(Typography, {\n    variant: \"h6\",\n    noWrap: true\n  }, \"Responsive drawer\"))), __jsx(\"nav\", {\n    className: classes.drawer,\n    \"aria-label\": \"mailbox folders\"\n  }, __jsx(Hidden, {\n    smUp: true,\n    implementation: \"css\"\n  }, __jsx(Drawer, {\n    container: container,\n    variant: \"temporary\",\n    anchor: theme.direction === 'rtl' ? 'right' : 'left',\n    open: mobileOpen,\n    onClose: handleDrawerToggle,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    }\n  }, drawer)), __jsx(Hidden, {\n    xsDown: true,\n    implementation: \"css\"\n  }, __jsx(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true\n  }, drawer))));\n}","map":null,"metadata":{},"sourceType":"module"}