{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"../modules/store\";\nimport firebase from \"firebase/app\";\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport { ReactReduxFirebaseProvider, firebaseReducer } from \"react-redux-firebase\";\nconst fbConfig = {}; // react-redux-firebase config\n\nconst rrfConfig = {\n  userProfile: \"users\" // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n\n}; // Initialize firebase instance\n\nfirebase.initializeApp(fbConfig); // Initialize other services on firebase instance\n// firebase.firestore() // <- needed if using firestore\n// firebase.functions() // <- needed if using httpsCallable\n// Add firebase to reducers\n\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer // firestore: firestoreReducer // <- needed if using firestore\n\n}); // Create store with reducers and initial state\n\nconst initialState = {}; // const store = createStore(rootReducer, initialState)\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch // createFirestoreInstance // <- needed if using firestore\n\n};\n\nconst HabitPlanApp = ({\n  Component,\n  pageProps\n}) => {\n  return __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(ReactReduxFirebaseProvider, _extends({}, rrfProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default HabitPlanApp;","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/pages/_app.tsx"],"names":["React","Provider","store","firebase","combineReducers","ReactReduxFirebaseProvider","firebaseReducer","fbConfig","rrfConfig","userProfile","initializeApp","rootReducer","initialState","rrfProps","config","dispatch","HabitPlanApp","Component","pageProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAiD,OAAjD;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SACIC,0BADJ,EAEIC,eAFJ,QAGO,sBAHP;AAKA,MAAMC,QAAQ,GAAG,EAAjB,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAE,OADC,CAEd;;AAFc,CAAlB,C,CAKA;;AACAN,QAAQ,CAACO,aAAT,CAAuBH,QAAvB,E,CAEA;AACA;AACA;AAEA;;AACA,MAAMI,WAAW,GAAGP,eAAe,CAAC;AAChCD,EAAAA,QAAQ,EAAEG,eADsB,CAEhC;;AAFgC,CAAD,CAAnC,C,CAKA;;AACA,MAAMM,YAAY,GAAG,EAArB,C,CACA;;AAEA,MAAMC,QAAQ,GAAG;AACbV,EAAAA,QADa;AAEbW,EAAAA,MAAM,EAAEN,SAFK;AAGbO,EAAAA,QAAQ,EAAEb,KAAK,CAACa,QAHH,CAIb;;AAJa,CAAjB;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAwC;AACzD,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEhB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,0BAAD,eAAgCW,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ,CADJ;AAOH,CARD;;AAUA,eAAeF,YAAf","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport { AppProps } from \"next/app\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../modules/store\";\r\nimport firebase from \"firebase/app\";\r\nimport { userTask } from \"../modules/userTasksType\";\r\nimport { combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n    ReactReduxFirebaseProvider,\r\n    firebaseReducer,\r\n} from \"react-redux-firebase\";\r\n\r\nconst fbConfig = {};\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n    userProfile: \"users\",\r\n    // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n};\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(fbConfig);\r\n\r\n// Initialize other services on firebase instance\r\n// firebase.firestore() // <- needed if using firestore\r\n// firebase.functions() // <- needed if using httpsCallable\r\n\r\n// Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    // firestore: firestoreReducer // <- needed if using firestore\r\n});\r\n\r\n// Create store with reducers and initial state\r\nconst initialState = {};\r\n// const store = createStore(rootReducer, initialState)\r\n\r\nconst rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    // createFirestoreInstance // <- needed if using firestore\r\n};\r\n\r\nconst HabitPlanApp = ({ Component, pageProps }: AppProps) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <ReactReduxFirebaseProvider {...rrfProps}>\r\n                <Component {...pageProps} />\r\n            </ReactReduxFirebaseProvider>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default HabitPlanApp;\r\n"]},"metadata":{},"sourceType":"module"}