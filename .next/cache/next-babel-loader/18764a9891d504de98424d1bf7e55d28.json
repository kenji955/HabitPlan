{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport router from \"next/router\"; // import { Route, Switch, withRouter, Redirect,BrowserRouter } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DayPlanPC from \"./DayPlan\";\nimport FirebaseAuthComponent from \"../components/test/firebaseTest/FirebaseAuthComponent\";\nimport { useSelector } from \"react-redux\";\nimport { auth } from \"../components/test/firebaseTest/firebaseTest\";\nvar useStyles = makeStyles({\n  button: {\n    backgroundColor: \"green\"\n  }\n});\n\nvar App = function App() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userId = _useSelector.userId;\n\n  var RenderComponent = __jsx(FirebaseAuthComponent, null);\n\n  auth.onAuthStateChanged(function (authUser) {\n    if (authUser) {\n      // this.setState({\n      //   status: \"SIGNED_IN\"\n      // });\n      RenderComponent = __jsx(DayPlanPC, null);\n      console.log('check 1');\n      router.push(\"/DayPlan\");\n      return RenderComponent;\n    } else {\n      RenderComponent = __jsx(FirebaseAuthComponent, null);\n      console.log('check 2');\n      return RenderComponent;\n    }\n  }); // useMemo(() => {\n  //     if (userId == \"\") {\n  //         RenderComponent = <FirebaseAuthComponent />;\n  //     } else {\n  //         RenderComponent = <DayPlanPC />;\n  //     }\n  // }, [userId]);\n\n  return RenderComponent; // <DayPlanPC />\n  // <Tasks />\n  // <BrowserRouter>{routes}</BrowserRouter>\n  // <Container fixed>\n  //     <h1>Todo App</h1>\n  //     <Box component=\"span\" m={1} className={classes.button}>\n  //         {/* <Button variant=\"contained\" color=\"primary\">\n  //                 Test\n  //             </Button> */}\n  //         <FloatingActionButtonZoom />\n  //         <BottomNavigation />\n  //     </Box>\n  //     {/* <Box>\n  //     </Box> */}\n  // </Container>\n};\n\nexport default App; // ReactDOM.render( App );","map":null,"metadata":{},"sourceType":"module"}