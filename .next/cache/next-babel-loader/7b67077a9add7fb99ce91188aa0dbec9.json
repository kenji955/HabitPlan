{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'; // import styles from 'ScrollableTabsButtonAuto.css'\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, __jsx(Typography, null, children)));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  AppBarRoot: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  tabsBar: {\n    justifyContent: 'center'\n  },\n  tab: {\n    // width: theme.spacing(1),\n    minWidth: theme.spacing(7)\n  }\n})); // export default function ScrollableTabsButtonAuto(props: {\n//     dataList: {\n//         handleClick: () => void;\n//         date: number;\n//         day: string;\n//     }[]\n// }) {\n\nexport default function ScrollableTabsButtonAuto(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const displayRange = 14;\n  const dataList = [];\n  const dateT = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\n  const date = props.today;\n  date.setDate(props.today.getDate() - displayRange + 1);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleClick = (year, month, date) => () => {\n    props.setChoiceDate([year, month, date]);\n  };\n\n  for (let index = displayRange - 1; index >= 0; index--) {\n    const labelText = __jsx(\"span\", null, dateT[date.getDay()], __jsx(\"br\", null), date.getDate());\n\n    dataList.push(__jsx(Tab // key={date.getFullYear()+\"_\"+date.getMonth()+1+\"_\"+date.getDate()}\n    // variant=\"square\"\n    , {\n      onClick: handleClick(date.getFullYear(), date.getMonth() + 1, date.getDate()),\n      label: labelText // label={date.getDate()}\n      ,\n      wrapped: true,\n      className: classes.tab\n    }) // </Tab>\n    // ここにタブ表示用の情報をまとめたオブジェクトを作成する。\n    // {\n    //     handleClick: handleClick(date.getFullYear(),date.getMonth() + 1,date.getDate()), date: date.getDate(), day: dateT[date.getDay()]\n    // }\n    );\n    date.setDate(props.today.getDate() + 1);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.AppBarRoot\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\"\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    \"aria-label\": \"scrollable auto tabs example\",\n    className: classes.tabsBar\n  }, dataList.map(data => {\n    return data;\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}