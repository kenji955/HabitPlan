{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\components\\\\view\\\\ScrollableTabsButtonAuto.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'; // import styles from 'ScrollableTabsButtonAuto.css'\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"scrollable-auto-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-auto-tab-\".concat(index)\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), value === index && __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, children)));\n}\n\n_c = TabPanel;\n\nfunction a11yProps(index) {\n  return {\n    id: \"scrollable-auto-tab-\".concat(index),\n    'aria-controls': \"scrollable-auto-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    AppBarRoot: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    },\n    tabsBar: {\n      justifyContent: 'center'\n    },\n    tab: {\n      // width: theme.spacing(1),\n      minWidth: theme.spacing(7)\n    }\n  };\n}); // export default function ScrollableTabsButtonAuto(props: {\n//     dataList: {\n//         handleClick: () => void;\n//         date: number;\n//         day: string;\n//     }[]\n// }) {\n\nexport default function ScrollableTabsButtonAuto(props) {\n  _s();\n\n  var classes = useStyles();\n  var displayRange = 14;\n\n  var _React$useState = React.useState(displayRange - 1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var dataList = [];\n  var dateT = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\n  var date = props.today;\n  date.setDate(props.today.getDate() - displayRange + 1);\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  var handleClick = function handleClick(year, month, date) {\n    return function () {\n      props.setChoiceDate([year, month, date]);\n    };\n  };\n\n  for (var index = displayRange - 1; index >= 0; index--) {\n    var labelText = __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 28\n      }\n    }, dateT[date.getDay()], __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 56\n      }\n    }), date.getDate());\n\n    dataList.push(__jsx(Tab, {\n      key: date.getFullYear() + \"_\" + date.getMonth() + 1 + \"_\" + date.getDate() // variant=\"square\"\n      ,\n      onClick: handleClick(date.getFullYear(), date.getMonth() + 1, date.getDate()),\n      label: labelText // label={date.getDate()}\n      ,\n      wrapped: true,\n      className: classes.tab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }) // </Tab>\n    // ここにタブ表示用の情報をまとめたオブジェクトを作成する。\n    // {\n    //     handleClick: handleClick(date.getFullYear(),date.getMonth() + 1,date.getDate()), date: date.getDate(), day: dateT[date.getDay()]\n    // }\n    );\n    date.setDate(props.today.getDate() + 1);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.AppBarRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    \"aria-label\": \"scrollable auto tabs example\",\n    className: classes.tabsBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, dataList.map(function (data) {\n    return data;\n  }))));\n}\n\n_s(ScrollableTabsButtonAuto, \"OJFtwPfv01467a9xt1Zr/AG1M3s=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = ScrollableTabsButtonAuto;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ScrollableTabsButtonAuto\");","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/components/view/ScrollableTabsButtonAuto.tsx"],"names":["React","makeStyles","AppBar","Tabs","Tab","Typography","Box","TabPanel","props","children","value","index","other","a11yProps","id","useStyles","theme","AppBarRoot","flexGrow","width","backgroundColor","palette","background","paper","tabsBar","justifyContent","tab","minWidth","spacing","ScrollableTabsButtonAuto","classes","displayRange","useState","setValue","dataList","dateT","date","today","setDate","getDate","handleChange","event","newValue","handleClick","year","month","setChoiceDate","labelText","getDay","push","getFullYear","getMonth","map","data"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n// import styles from 'ScrollableTabsButtonAuto.css'\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    AppBarRoot: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    tabsBar:{\r\n        justifyContent:'center',\r\n    },\r\n    tab: {\r\n        // width: theme.spacing(1),\r\n        minWidth: theme.spacing(7),\r\n    }\r\n}));\r\n\r\n// export default function ScrollableTabsButtonAuto(props: {\r\n//     dataList: {\r\n//         handleClick: () => void;\r\n//         date: number;\r\n//         day: string;\r\n//     }[]\r\n// }) {\r\nexport default function ScrollableTabsButtonAuto(props: {\r\n    today: Date;\r\n    setChoiceDate: React.Dispatch<React.SetStateAction<number[]>>;\r\n}) {\r\n    const classes = useStyles();\r\n    const displayRange: number = 14;\r\n    const [value, setValue] = React.useState(displayRange-1);\r\n\r\n    const dataList = [];\r\n    const dateT = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\r\n    const date = props.today;\r\n    date.setDate(props.today.getDate() - displayRange + 1);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleClick = (year: number, month: number, date: number) => () => {\r\n        props.setChoiceDate([year, month, date]);\r\n    };\r\n\r\n    for (let index: number = displayRange - 1; index >= 0; index--) {\r\n        const labelText = (<span>{dateT[date.getDay()]}<br></br>{date.getDate()}</span>);\r\n        dataList.push(\r\n            <Tab\r\n                key={date.getFullYear()+\"_\"+date.getMonth()+1+\"_\"+date.getDate()}\r\n                // variant=\"square\"\r\n                onClick={handleClick(\r\n                    date.getFullYear(),\r\n                    date.getMonth() + 1,\r\n                    date.getDate()\r\n                )}\r\n                label={labelText}\r\n                // label={date.getDate()}\r\n                wrapped={true}\r\n                className={classes.tab}\r\n            />\r\n            // </Tab>\r\n            // ここにタブ表示用の情報をまとめたオブジェクトを作成する。\r\n            // {\r\n            //     handleClick: handleClick(date.getFullYear(),date.getMonth() + 1,date.getDate()), date: date.getDate(), day: dateT[date.getDay()]\r\n            // }\r\n        );\r\n        date.setDate(props.today.getDate() + 1);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.AppBarRoot}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    aria-label=\"scrollable auto tabs example\"\r\n                    className={classes.tabsBar}\r\n                >\r\n                    {dataList.map((data) => {\r\n                        return data\r\n                    })}\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}