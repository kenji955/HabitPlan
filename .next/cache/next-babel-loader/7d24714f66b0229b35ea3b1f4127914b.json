{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { taskRemovePattern } from \"../../modules/tasksModule\";\nconst useStyles = makeStyles(theme => createStyles({\n  roots: {\n    width: \"100%\",\n    maxWidth: 720,\n    margin: \"auto\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function PatternList(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    userTaskInfo\n  } = useSelector(state => state.tasks); // マイナスボタンがクリックされたらパターンから対象のタスクを除外する。\n\n  const patternRemoveHandler = detailTitle => () => {\n    const patternId = props.choice;\n    dispatch(taskRemovePattern({\n      patternId,\n      detailTitle\n    }));\n  }; // 選択したパターンIDが設定されているタスクを抽出する。\n\n\n  const choicePatternTasks = userTaskInfo.tasks.filter(function (task) {\n    return task.patternInfo.some(task => task.patternID == props.choice);\n  });\n  return __jsx(List, {\n    className: classes.roots\n  }, choicePatternTasks.map((task, index) => {\n    const taskPattern = task.patternInfo.filter(function (patternInfo) {\n      return patternInfo.patternID == props.choice;\n    });\n    const labelId = `checkbox-list-label-${taskPattern[0].patternID + taskPattern[0].order}`;\n    return __jsx(\"div\", {\n      key: taskPattern[0].patternID + '_' + index\n    }, __jsx(ListItem, {\n      key: taskPattern[0].patternID + taskPattern[0].order,\n      role: undefined,\n      dense: true,\n      button: true\n    }, __jsx(ListItemIcon, null, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      onClick: patternRemoveHandler(task.detail['title'])\n    }, __jsx(RemoveCircleIcon, {\n      color: \"secondary\"\n    }))), __jsx(ListItemText, {\n      id: labelId,\n      primary: `${task.detail[\"タスク名\"]}`\n    }), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\"\n    }, __jsx(CommentIcon, null)))), __jsx(Divider, null));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}