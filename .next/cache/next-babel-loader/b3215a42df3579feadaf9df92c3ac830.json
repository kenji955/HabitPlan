{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiSnackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InfoIcon from '@material-ui/icons/Info';\nimport IconButton from '@material-ui/core/IconButton';\n\nvar styles = function styles(theme) {\n  return {\n    content: _defineProperty({\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.text.primary,\n      flexWrap: 'inherit'\n    }, theme.breakpoints.up('md'), {\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 4,\n      borderBottomLeftRadius: 4\n    }),\n    contentMessage: {\n      fontSize: 16,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    contentAction: {\n      paddingLeft: theme.spacing(2)\n    },\n    info: {\n      flexShrink: 0,\n      marginRight: theme.spacing(2)\n    },\n    close: {\n      padding: theme.spacing(1)\n    }\n  };\n};\n\nfunction Transition(props) {\n  return __jsx(Slide, _extends({}, props, {\n    direction: \"down\"\n  }));\n}\n\nfunction Snackbar(props) {\n  var classes = props.classes,\n      onClose = props.onClose,\n      message = props.message,\n      other = _objectWithoutProperties(props, [\"classes\", \"onClose\", \"message\"]);\n\n  return __jsx(MuiSnackbar, _extends({\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 6000,\n    transition: Transition,\n    ContentProps: {\n      classes: {\n        root: classes.content,\n        message: classes.contentMessage,\n        action: classes.contentAction\n      }\n    },\n    message: __jsx(React.Fragment, null, __jsx(InfoIcon, {\n      className: classes.info\n    }), __jsx(\"span\", null, message)),\n    action: [__jsx(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: onClose\n    }, __jsx(CloseIcon, null))]\n  }, other));\n}\n\nexport default withStyles(styles)(Snackbar);","map":null,"metadata":{},"sourceType":"module"}