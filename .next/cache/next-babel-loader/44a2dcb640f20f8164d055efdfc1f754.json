{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nconst useStyles = makeStyles(theme => createStyles({\n  roots: {\n    width: '100%',\n    maxWidth: 720,\n    margin: 'auto',\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function PatternList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return __jsx(List, {\n    className: classes.roots\n  }, [0, 1, 2, 3].map(value => {\n    const labelId = `checkbox-list-label-${value}`;\n    return __jsx(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(value)\n    }, __jsx(ListItemIcon, null, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\"\n    }, __jsx(RemoveCircleIcon, {\n      color: \"secondary\"\n    }))), __jsx(ListItemText, {\n      id: labelId,\n      primary: `Line item ${value + 1}`\n    }), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\"\n    }, __jsx(CommentIcon, null))));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}