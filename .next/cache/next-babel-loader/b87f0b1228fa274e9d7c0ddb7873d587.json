{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blelm\\\\Desktop\\\\AppCreate\\\\habitPlan\\\\src\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useMemo } from \"react\";\nimport router from \"next/router\"; // import { Route, Switch, withRouter, Redirect,BrowserRouter } from \"react-router-dom\";\n\nimport DayPlanPC from \"./DayPlan\";\nimport SignIn from '../components/view/SignIn';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../modules/userModule\";\nimport { auth } from \"../components/test/firebaseTest/firebaseTest\";\nimport { useFetchAllData } from \"../components/test/firebaseTest/DBFetch\";\nimport { init } from \"../modules/tasksModule\"; // ここでReduxのログイン処理を行う\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const {\n    userId\n  } = useSelector(state => state.user);\n  const {\n    data\n  } = useMemo(() => useFetchAllData(), [userId]); // const { data } = useFetchAllData();\n\n  let RenderComponent = __jsx(SignIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 40\n    }\n  });\n\n  auth.onAuthStateChanged(authUser => {\n    if (authUser) {\n      // this.setState({\n      //   status: \"SIGNED_IN\"\n      // });\n      RenderComponent = __jsx(DayPlanPC, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 31\n        }\n      });\n      console.log('check 1');\n      console.log(authUser.uid);\n\n      if (!!authUser.uid) {\n        dispatch(login(authUser.uid));\n        console.log(userId);\n        console.log(\"index data\");\n        console.log(data); // setUT(useSelector((state: RootState) => state.tasks));\n\n        if (!!data) {\n          dispatch(init(data));\n        }\n\n        router.push(\"/DayPlan\");\n        return RenderComponent;\n      }\n    } else {\n      // RenderComponent = <FirebaseAuthComponent />;\n      RenderComponent = __jsx(SignIn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 31\n        }\n      });\n      console.log('check 2');\n      return RenderComponent;\n    }\n  }); // useMemo(() => {\n  //     if (userId == \"\") {\n  //         RenderComponent = <FirebaseAuthComponent />;\n  //     } else {\n  //         RenderComponent = <DayPlanPC />;\n  //     }\n  // }, [userId]);\n\n  return RenderComponent; // <DayPlanPC />\n  // <Tasks />\n  // <BrowserRouter>{routes}</BrowserRouter>\n  // <Container fixed>\n  //     <h1>Todo App</h1>\n  //     <Box component=\"span\" m={1} className={classes.button}>\n  //         {/* <Button variant=\"contained\" color=\"primary\">\n  //                 Test\n  //             </Button> */}\n  //         <FloatingActionButtonZoom />\n  //         <BottomNavigation />\n  //     </Box>\n  //     {/* <Box>\n  //     </Box> */}\n  // </Container>\n};\n\nexport default App; // ReactDOM.render( App );","map":{"version":3,"sources":["C:/Users/blelm/Desktop/AppCreate/habitPlan/src/pages/index.tsx"],"names":["React","useMemo","router","DayPlanPC","SignIn","useDispatch","useSelector","login","auth","useFetchAllData","init","App","dispatch","userId","state","user","data","RenderComponent","onAuthStateChanged","authUser","console","log","uid","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAAyC,OAAzC;AAEA,OAAOC,MAAP,MAAmB,aAAnB,C,CACA;;AASA,OAAOC,SAAP,MAAsB,WAAtB;AAGA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,IAAT,QAAqB,8CAArB;AACA,SAASC,eAAT,QAAgC,yCAAhC;AACA,SAASC,IAAT,QAAqB,wBAArB,C,CAEA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaP,WAAW,CAAEQ,KAAD,IAAsBA,KAAK,CAACC,IAA7B,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWf,OAAO,CAAC,MAAMQ,eAAe,EAAtB,EAA0B,CAACI,MAAD,CAA1B,CAAxB,CAHc,CAId;;AAEA,MAAII,eAA4B,GAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC;;AAEAT,EAAAA,IAAI,CAACU,kBAAL,CAAyBC,QAAD,IAAc;AAClC,QAAIA,QAAJ,EAAc;AACV;AACA;AACA;AACAF,MAAAA,eAAe,GAAG,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAArB;;AACA,UAAG,CAAC,CAACH,QAAQ,CAACG,GAAd,EAAkB;AACdV,QAAAA,QAAQ,CAACL,KAAK,CAACY,QAAQ,CAACG,GAAV,CAAN,CAAR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAJc,CAKd;;AACA,YAAI,CAAC,CAACA,IAAN,EAAY;AACRJ,UAAAA,QAAQ,CAACF,IAAI,CAACM,IAAD,CAAL,CAAR;AACH;;AACDd,QAAAA,MAAM,CAACqB,IAAP,CAAY,UAAZ;AACA,eAAON,eAAP;AACH;AACJ,KAnBD,MAmBO;AACH;AACAA,MAAAA,eAAe,GAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAOJ,eAAP;AACH;AACJ,GA1BD,EARc,CAoCd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOA,eAAP,CA5Cc,CA6Cd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA5DD;;AA8DA,eAAeN,GAAf,C,CACA","sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport router from \"next/router\";\r\n// import { Route, Switch, withRouter, Redirect,BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport FloatingActionButtonZoom from \"../components/view/FloatingActionButton\";\r\nimport BottomNavigation from \"../components/view/BottomNavigation\";\r\nimport DayPlanPC from \"./DayPlan\";\r\nimport Tasks from \"./tasks\";\r\nimport FirebaseAuthComponent from \"../components/test/firebaseTest/FirebaseAuthComponent\";\r\nimport SignIn from '../components/view/SignIn'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../modules/rootReducer\";\r\nimport { login } from \"../modules/userModule\";\r\nimport { auth } from \"../components/test/firebaseTest/firebaseTest\";\r\nimport { useFetchAllData } from \"../components/test/firebaseTest/DBFetch\";\r\nimport { init } from \"../modules/tasksModule\";\r\n\r\n// ここでReduxのログイン処理を行う\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    const { userId } = useSelector((state: RootState) => state.user);\r\n    const { data } = useMemo(() => useFetchAllData(), [userId]);\r\n    // const { data } = useFetchAllData();\r\n    \r\n    let RenderComponent: JSX.Element = <SignIn />;\r\n    \r\n    auth.onAuthStateChanged((authUser) => {\r\n        if (authUser) {\r\n            // this.setState({\r\n            //   status: \"SIGNED_IN\"\r\n            // });\r\n            RenderComponent = <DayPlanPC />;\r\n            console.log('check 1');\r\n            console.log(authUser.uid);\r\n            if(!!authUser.uid){\r\n                dispatch(login(authUser.uid));\r\n                console.log(userId);\r\n                console.log(\"index data\");\r\n                console.log(data);\r\n                // setUT(useSelector((state: RootState) => state.tasks));\r\n                if (!!data) {\r\n                    dispatch(init(data));\r\n                }\r\n                router.push(\"/DayPlan\");\r\n                return RenderComponent;\r\n            }\r\n        } else {\r\n            // RenderComponent = <FirebaseAuthComponent />;\r\n            RenderComponent = <SignIn />;\r\n            console.log('check 2');\r\n            return RenderComponent;\r\n        }\r\n    });\r\n\r\n    // useMemo(() => {\r\n    //     if (userId == \"\") {\r\n    //         RenderComponent = <FirebaseAuthComponent />;\r\n    //     } else {\r\n    //         RenderComponent = <DayPlanPC />;\r\n    //     }\r\n    // }, [userId]);\r\n\r\n    return RenderComponent;\r\n    // <DayPlanPC />\r\n    // <Tasks />\r\n    // <BrowserRouter>{routes}</BrowserRouter>\r\n    // <Container fixed>\r\n    //     <h1>Todo App</h1>\r\n    //     <Box component=\"span\" m={1} className={classes.button}>\r\n    //         {/* <Button variant=\"contained\" color=\"primary\">\r\n    //                 Test\r\n    //             </Button> */}\r\n    //         <FloatingActionButtonZoom />\r\n    //         <BottomNavigation />\r\n    //     </Box>\r\n    //     {/* <Box>\r\n    //     </Box> */}\r\n    // </Container>\r\n};\r\n\r\nexport default App;\r\n// ReactDOM.render( App );\r\n"]},"metadata":{},"sourceType":"module"}